var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { warning, HELP_IDS } from '../createValidationResult';
export default (function (typeDef, visitorContext) {
    var problems = [];
    if (typeDef.options && typeDef.options.slugifyFn) {
        problems.push(warning('Heads up! The "slugifyFn" option has been renamed to "slugify".', HELP_IDS.SLUG_SLUGIFY_FN_RENAMED));
        typeDef.options.slugify = typeDef.options.slugifyFn;
    }
    return __assign(__assign({}, typeDef), { _problems: problems });
});
//# sourceMappingURL=slug.js.map