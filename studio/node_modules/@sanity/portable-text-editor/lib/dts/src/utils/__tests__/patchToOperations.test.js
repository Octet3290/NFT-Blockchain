import { createEditor } from 'slate';
import { getPortableTextFeatures } from '../getPortableTextFeatures';
import { type } from '../../editor/__tests__/PortableTextEditorTester';
import { createPatchToOperations } from '../patchToOperations';
import { withPlugins } from '../../editor/plugins';
import { keyGenerator, PortableTextEditor } from '../..';
import { fromSlateValue } from '../values';
var portableTextFeatures = getPortableTextFeatures(type);
var patchToOperations = createPatchToOperations(portableTextFeatures, keyGenerator);
var editor = withPlugins(createEditor(), {
    portableTextEditor: new PortableTextEditor({ type: type }),
});
var createDefaultValue = function () {
    return [
        {
            _type: 'image',
            _key: 'c01739b0d03b',
            children: [
                {
                    _key: 'c01739b0d03b-void-child',
                    _type: 'span',
                    text: '',
                    marks: [],
                },
            ],
            __inline: false,
            value: {
                asset: {
                    _ref: 'image-f52f71bc1df46e080dabe43a8effe8ccfb5f21de-4032x3024-png',
                    _type: 'reference',
                },
            },
        },
    ];
};
describe('operationToPatches', function () {
    beforeEach(function () {
        editor.children = createDefaultValue();
        editor.onChange();
    });
    it('makes the correct operations for block objects', function () {
        var patches = [
            { type: 'unset', path: [{ _key: 'c01739b0d03b' }, 'hotspot'], origin: 'remote' },
            { type: 'unset', path: [{ _key: 'c01739b0d03b' }, 'crop'], origin: 'remote' },
            {
                type: 'set',
                path: [{ _key: 'c01739b0d03b' }, 'asset'],
                value: {
                    _ref: 'image-b5681d9d0b2b6c922238e7c694500dd7c1349b19-256x256-jpg',
                    _type: 'reference',
                },
                origin: 'remote',
            },
        ];
        var snapShot = fromSlateValue(editor.children, portableTextFeatures.types.block.name);
        patches.forEach(function (p) {
            patchToOperations(editor, p, patches, snapShot);
        });
        expect(editor.children).toMatchInlineSnapshot("\n      Array [\n        Object {\n          \"__inline\": false,\n          \"_key\": \"c01739b0d03b\",\n          \"_type\": \"image\",\n          \"children\": Array [\n            Object {\n              \"_key\": \"c01739b0d03b-void-child\",\n              \"_type\": \"span\",\n              \"marks\": Array [],\n              \"text\": \"\",\n            },\n          ],\n          \"value\": Object {\n            \"asset\": Object {\n              \"_ref\": \"image-f52f71bc1df46e080dabe43a8effe8ccfb5f21de-4032x3024-png\",\n              \"_type\": \"reference\",\n            },\n          },\n        },\n      ]\n    ");
    });
});
//# sourceMappingURL=patchToOperations.test.js.map