"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchPopover = SearchPopover;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _reactFocusLock = _interopRequireDefault(require("react-focus-lock"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _autoId = require("@reach/auto-id");

var _constants = require("../constants");

var _commandList = require("../contexts/commandList");

var _search = require("../contexts/search");

var _selectors = require("../contexts/search/selectors");

var _useMeasureSearchResultsIndex = require("../hooks/useMeasureSearchResultsIndex");

var _useSearchHotkeys = require("../hooks/useSearchHotkeys");

var _RecentSearches = require("./RecentSearches");

var _SearchHeader = require("./SearchHeader");

var _SearchResults = require("./SearchResults");

var _TypeFilters = require("./TypeFilters");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Overlay = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background-color: ", ";\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n"])), _ref => {
  var theme = _ref.theme;
  return theme.sanity.color.base.shadow.ambient;
});

var SearchContentBox = (0, _styledComponents.default)(_ui.Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  overflow-x: hidden;\n  overflow-y: auto;\n  position: relative;\n"])));
var SearchPopoverCard = (0, _styledComponents.default)(_ui.Card)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  ", "\n  display: flex !important;\n  flex-direction: column;\n  max-height: ", ";\n  position: absolute;\n  top: ", "px;\n  width: min(calc(100vw - ", "px), ", "px);\n"])), _ref2 => {
  var $position = _ref2.$position;
  return $position.x ? (0, _styledComponents.css)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n          left: ", "px;\n        "])), $position.x) : (0, _styledComponents.css)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n          left: 50%;\n          transform: translateX(-50%);\n        "])));
}, _ref3 => {
  var $position = _ref3.$position;
  return "min(calc(100vh - ".concat($position.y, "px - ").concat(_constants.POPOVER_INPUT_PADDING, "px), ").concat(_constants.POPOVER_MAX_HEIGHT, "px)");
}, _ref4 => {
  var $position = _ref4.$position;
  return $position.y;
}, _constants.POPOVER_INPUT_PADDING * 2, _constants.POPOVER_MAX_WIDTH);
var TypeFilterCard = (0, _styledComponents.default)(_ui.Card)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  border-left: 1px solid ", ";\n  max-width: 250px;\n  width: 100%;\n"])), _ref5 => {
  var theme = _ref5.theme;
  return theme.sanity.color.base.border;
});

function SearchPopover(_ref6) {
  var onClose = _ref6.onClose,
      onOpen = _ref6.onOpen,
      open = _ref6.open,
      position = _ref6.position;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      childContainerElement = _useState2[0],
      setChildContainerRef = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      containerElement = _useState4[0],
      setContainerRef = _useState4[1];

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      headerInputElement = _useState6[0],
      setHeaderInputRef = _useState6[1];

  var _useState7 = (0, _react.useState)(null),
      _useState8 = _slicedToArray(_useState7, 2),
      pointerOverlayElement = _useState8[0],
      setPointerOverlayRef = _useState8[1];

  var isMountedRef = (0, _react.useRef)(false);

  var _useLayer = (0, _ui.useLayer)(),
      zIndex = _useLayer.zIndex;

  var _useSearchState = (0, _search.useSearchState)(),
      _useSearchState$state = _useSearchState.state,
      recentSearches = _useSearchState$state.recentSearches,
      result = _useSearchState$state.result,
      terms = _useSearchState$state.terms;

  var hasValidTerms = (0, _selectors.hasSearchableTerms)(terms);
  /**
   * Measure top-most visible search result index
   */

  var _useMeasureSearchResu = (0, _useMeasureSearchResultsIndex.useMeasureSearchResultsIndex)(childContainerElement),
      lastSearchIndex = _useMeasureSearchResu.lastSearchIndex,
      resetLastSearchIndex = _useMeasureSearchResu.resetLastSearchIndex,
      setLastSearchIndex = _useMeasureSearchResu.setLastSearchIndex;
  /**
   * Reset last search index when new results are loaded, or visiting recent searches
   * @todo Revise if/when we introduce pagination
   */


  (0, _react.useEffect)(() => {
    if (!(isMountedRef !== null && isMountedRef !== void 0 && isMountedRef.current)) {
      isMountedRef.current = true;
      return;
    }

    if (!hasValidTerms || result.loaded) {
      resetLastSearchIndex();
    }
  }, [hasValidTerms, resetLastSearchIndex, result.loaded]);
  /**
   * Store top-most search result scroll index on close
   */

  var handleClose = (0, _react.useCallback)(() => {
    setLastSearchIndex();
    onClose();
  }, [onClose, setLastSearchIndex]);
  /**
   * Bind hotkeys to open / close actions
   */

  (0, _useSearchHotkeys.useSearchHotkeys)({
    onClose: handleClose,
    onOpen,
    open
  });
  (0, _ui.useClickOutside)(handleClose, [containerElement]);
  var handleClearRecentSearches = (0, _react.useCallback)(() => {
    headerInputElement === null || headerInputElement === void 0 ? void 0 : headerInputElement.focus();
  }, [headerInputElement]);
  var dialogId = (0, _autoId.useId)();

  if (!open) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_ui.Portal, null, /*#__PURE__*/_react.default.createElement(_reactFocusLock.default, {
    autoFocus: false,
    returnFocus: true
  }, /*#__PURE__*/_react.default.createElement(Overlay, {
    style: {
      zIndex
    }
  }), /*#__PURE__*/_react.default.createElement(_commandList.CommandListProvider, {
    ariaChildrenLabel: hasValidTerms ? 'Search results' : 'Recent searches',
    ariaHeaderLabel: "Search results",
    autoFocus: true,
    childContainerElement: childContainerElement,
    childCount: hasValidTerms ? result.hits.length : recentSearches.length,
    containerElement: containerElement,
    headerInputElement: headerInputElement,
    id: dialogId,
    "data-testid": "search-results-popover",
    initialSelectedIndex: hasValidTerms ? lastSearchIndex : 0,
    level: 0,
    pointerOverlayElement: pointerOverlayElement,
    virtualList: hasValidTerms
  }, /*#__PURE__*/_react.default.createElement(SearchPopoverCard, {
    $position: position,
    overflow: "hidden",
    radius: 2,
    ref: setContainerRef,
    scheme: "light",
    shadow: 2,
    style: {
      zIndex
    }
  }, /*#__PURE__*/_react.default.createElement(_SearchHeader.SearchHeader, {
    setHeaderInputRef: setHeaderInputRef
  }), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "stretch",
    direction: "row-reverse"
  }, /*#__PURE__*/_react.default.createElement(SearchPopoverFilters, null), /*#__PURE__*/_react.default.createElement(SearchContentBox, {
    flex: 1
  }, hasValidTerms ? /*#__PURE__*/_react.default.createElement(_SearchResults.SearchResults, {
    onClose: handleClose,
    setChildContainerRef: setChildContainerRef,
    setPointerOverlayRef: setPointerOverlayRef
  }) : /*#__PURE__*/_react.default.createElement(_RecentSearches.RecentSearches, {
    setChildContainerRef: setChildContainerRef,
    setPointerOverlayRef: setPointerOverlayRef,
    onClear: handleClearRecentSearches,
    showFiltersOnClick: true
  })))))));
}

function SearchPopoverFilters() {
  var _useSearchState2 = (0, _search.useSearchState)(),
      filtersVisible = _useSearchState2.state.filtersVisible;

  if (!filtersVisible) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(TypeFilterCard, {
    tone: "transparent"
  }, /*#__PURE__*/_react.default.createElement(_TypeFilters.TypeFilters, {
    small: true
  }));
}