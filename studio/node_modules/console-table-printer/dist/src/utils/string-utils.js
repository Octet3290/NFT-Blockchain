"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.biggestWordInSentence = exports.limitWidth = exports.textWithPadding = void 0;
const console_utils_1 = __importDefault(require("./console-utils"));
// ("How are you?",center, 20) => "    How are you?    "
// ("How are you?",right, 20)  => "        How are you?"
const textWithPadding = (text, alignment, columnLen, charLength) => {
    const curTextSize = (0, console_utils_1.default)(text, charLength);
    // alignments for center padding case
    const leftPadding = Math.floor((columnLen - curTextSize) / 2);
    const rightPadding = columnLen - leftPadding - curTextSize;
    // handle edge cases where the text size is larger than the column length
    if (columnLen < curTextSize) {
        return text;
    }
    // console.log(text, columnLen, curTextSize);
    switch (alignment) {
        case 'left':
            return text.concat(' '.repeat(columnLen - curTextSize));
        case 'center':
            return ' '
                .repeat(leftPadding)
                .concat(text)
                .concat(' '.repeat(rightPadding));
        case 'right':
        default:
            return ' '.repeat(columnLen - curTextSize).concat(text);
    }
};
exports.textWithPadding = textWithPadding;
// ("How are you?",10) => ["How are ", "you?"]
const limitWidth = (inpStr, width, charLength) => {
    const ret = [];
    const spaceSeparatedStrings = inpStr.split(' ');
    let now = [];
    let cnt = 0;
    spaceSeparatedStrings.forEach((strWithoutSpace) => {
        const consoleWidth = (0, console_utils_1.default)(strWithoutSpace, charLength);
        if (cnt + consoleWidth <= width) {
            cnt += consoleWidth + 1; // 1 for the space
            now.push(strWithoutSpace);
        }
        else {
            ret.push(now.join(' '));
            now = [strWithoutSpace];
            cnt = consoleWidth + 1;
        }
    });
    ret.push(now.join(' '));
    return ret;
};
exports.limitWidth = limitWidth;
// ("How are you?",10) => ["How are ", "you?"]
const biggestWordInSentence = (inpStr, charLength) => inpStr
    .split(' ')
    .reduce((a, b) => Math.max(a, (0, console_utils_1.default)(b, charLength)), 0);
exports.biggestWordInSentence = biggestWordInSentence;
