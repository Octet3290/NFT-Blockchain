"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchHeader = SearchHeader;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _search = require("../contexts/search");

var _supportsTouch = require("../utils/supportsTouch");

var _CustomTextInput = require("./CustomTextInput");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var AlignedSpinner = (0, _styledComponents.default)(_ui.Spinner)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  svg {\n    width: 20px;\n    vertical-align: bottom !important;\n  }\n"])));
var FilterBox = (0, _styledComponents.default)(_ui.Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: relative;\n"])));
var SearchHeaderCard = (0, _styledComponents.default)(_ui.Card)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  flex-shrink: 0;\n"])));

var NotificationBadge = _styledComponents.default.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  align-items: center;\n  background: ", ";\n  color: ", ";\n  border-radius: 100%;\n  display: flex;\n  font-size: calc(8 / 16 * 1rem);\n  font-weight: ", ";\n  height: 14px;\n  justify-content: center;\n  pointer-events: none;\n  position: absolute;\n  right: -2px;\n  top: -2px;\n  width: 14px;\n"])), _ref => {
  var theme = _ref.theme;
  return theme.sanity.color.selectable.primary.enabled.fg;
}, _ref2 => {
  var theme = _ref2.theme;
  return theme.sanity.color.selectable.primary.selected.fg;
}, _ui.studioTheme.fonts.text.weights.semibold);

function SearchHeader(_ref3) {
  var onClose = _ref3.onClose,
      setHeaderInputRef = _ref3.setHeaderInputRef;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      filterButtonElement = _useState2[0],
      setFilterButtonRef = _useState2[1];

  var isMountedRef = (0, _react.useRef)(false);

  var _useSearchState = (0, _search.useSearchState)(),
      dispatch = _useSearchState.dispatch,
      _useSearchState$state = _useSearchState.state,
      filtersVisible = _useSearchState$state.filtersVisible,
      loading = _useSearchState$state.result.loading,
      terms = _useSearchState$state.terms;

  var handleFiltersToggle = (0, _react.useCallback)(() => dispatch({
    type: 'FILTERS_TOGGLE'
  }), [dispatch]);
  var handleQueryChange = (0, _react.useCallback)(e => dispatch({
    type: 'TERMS_QUERY_SET',
    query: e.currentTarget.value
  }), [dispatch]);
  var handleQueryClear = (0, _react.useCallback)(() => {
    dispatch({
      type: 'TERMS_QUERY_SET',
      query: ''
    });
  }, [dispatch]); // Focus filter button (when filters are hidden after initial mount)

  (0, _react.useEffect)(() => {
    if (isMountedRef !== null && isMountedRef !== void 0 && isMountedRef.current && !filtersVisible && !_supportsTouch.supportsTouch) {
      filterButtonElement === null || filterButtonElement === void 0 ? void 0 : filterButtonElement.focus();
    }
  }, [filterButtonElement, filtersVisible]);
  (0, _react.useEffect)(() => {
    isMountedRef.current = true;
  }, []);
  return /*#__PURE__*/_react.default.createElement(SearchHeaderCard, {
    borderBottom: true
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingLeft: onClose ? 2 : 1,
    paddingRight: onClose ? 2 : 0,
    paddingY: onClose ? 2 : 1
  }, /*#__PURE__*/_react.default.createElement(_CustomTextInput.CustomTextInput, {
    autoComplete: "off",
    border: false,
    clearButton: !!terms.query,
    fontSize: 2,
    icon: loading ? /*#__PURE__*/_react.default.createElement(AlignedSpinner, null) : _icons.SearchIcon,
    onChange: handleQueryChange,
    onClear: handleQueryClear,
    placeholder: "Search",
    ref: setHeaderInputRef,
    smallClearButton: true,
    spellCheck: false,
    value: terms.query
  })), /*#__PURE__*/_react.default.createElement(_ui.Card, {
    borderLeft: !!onClose,
    padding: onClose ? 2 : 1
  }, /*#__PURE__*/_react.default.createElement(FilterBox, null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    "aria-expanded": filtersVisible,
    "aria-label": "Filter",
    height: "fill",
    icon: _icons.ControlsIcon,
    mode: "bleed",
    onClick: handleFiltersToggle,
    padding: 3,
    ref: setFilterButtonRef,
    selected: filtersVisible,
    tone: "default"
  }), terms.types.length > 0 && /*#__PURE__*/_react.default.createElement(NotificationBadge, null, terms.types.length))), onClose && /*#__PURE__*/_react.default.createElement(_ui.Card, {
    borderLeft: true,
    padding: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    "aria-label": "Close search",
    icon: _icons.CloseIcon,
    mode: "bleed",
    onClick: onClose
  }))));
}