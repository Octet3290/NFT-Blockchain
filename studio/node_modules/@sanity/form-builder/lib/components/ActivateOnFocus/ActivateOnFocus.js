"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ActivateOnFocus;

var _react = _interopRequireWildcard(require("react"));

var _ActivateOnFocus = require("./ActivateOnFocus.styles");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// This is transitional in order to track usage of the ActivateOnFocusPart part from within the form-builder package
function ActivateOnFocus(props) {
  var children = props.children,
      message = props.message,
      onActivate = props.onActivate,
      isOverlayActive = props.isOverlayActive;
  var handleClick = (0, _react.useCallback)(() => {
    if (onActivate) {
      onActivate();
    }
  }, [onActivate]);
  var handleBlur = (0, _react.useCallback)(() => {
    if (onActivate && isOverlayActive) {
      onActivate();
    }
  }, [isOverlayActive, onActivate]);
  return /*#__PURE__*/_react.default.createElement(_ActivateOnFocus.OverlayContainer, {
    onClick: handleClick,
    onBlur: handleBlur
  }, isOverlayActive && /*#__PURE__*/_react.default.createElement(_ActivateOnFocus.FlexContainer, {
    tabIndex: 0,
    align: "center",
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ActivateOnFocus.CardContainer // Almost all input elements have radius=1, and this component is
  // typically used for overlaying input elements.
  // @todo Consider making `radius` a component property of `ActivateOnFocus`.
  , {
    radius: 1
  }), /*#__PURE__*/_react.default.createElement(_ActivateOnFocus.ContentContainer, null, message)), children);
}