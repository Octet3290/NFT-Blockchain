"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchField = SearchField;

var _react = _interopRequireWildcard(require("react"));

var _PlaceholderSearchInput = require("./components/PlaceholderSearchInput");

var _SearchPopover = require("./components/SearchPopover");

var _constants = require("./constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function SearchField() {
  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      placeholderElement = _useState2[0],
      setPlaceholderElement = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      open = _useState4[0],
      setOpen = _useState4[1];

  var handleClose = (0, _react.useCallback)(() => setOpen(false), []);
  var handleOpen = (0, _react.useCallback)(() => setOpen(true), []);
  var popoverPosition = usePopoverPosition(placeholderElement);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_PlaceholderSearchInput.PlaceholderSearchInput, {
    onOpen: handleOpen,
    ref: setPlaceholderElement
  }), /*#__PURE__*/_react.default.createElement(_SearchPopover.SearchPopover, {
    onClose: handleClose,
    onOpen: handleOpen,
    open: open,
    position: popoverPosition
  }));
}

function calcDialogPosition(element) {
  if (!element) {
    return null;
  }

  var placeholderRect = element.getBoundingClientRect(); // Offset positioning to account for dialog padding. This should ensure that our popover search input
  // sits directly over the top of the existing placeholder input.

  return {
    x: window.innerWidth - placeholderRect.x > _constants.POPOVER_MAX_WIDTH ? placeholderRect.x - _constants.POPOVER_INPUT_PADDING : null,
    y: placeholderRect.y - _constants.POPOVER_INPUT_PADDING
  };
}

function usePopoverPosition(element) {
  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      popoverPosition = _useState6[0],
      setPopoverPosition = _useState6[1];

  (0, _react.useEffect)(() => {
    setPopoverPosition(calcDialogPosition(element));
  }, [element]);
  /**
   * Update popover position on window resize based off current placeholder input
   */

  var handleWindowResize = (0, _react.useCallback)(() => {
    setPopoverPosition(calcDialogPosition(element));
  }, [element]);
  (0, _react.useEffect)(() => {
    window.addEventListener('resize', handleWindowResize);
    return () => window.removeEventListener('resize', handleWindowResize);
  }, [handleWindowResize]);
  return popoverPosition;
}