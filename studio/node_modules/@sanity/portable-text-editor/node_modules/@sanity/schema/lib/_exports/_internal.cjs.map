{"version":3,"file":"_internal.cjs","sources":["../../src/sanity/validation/createValidationResult.ts","../../src/sanity/groupProblems.ts","../../src/sanity/validation/utils/getDupes.ts","../../src/core/traverseSchema.ts","../../src/sanity/coreTypes.ts","../../src/sanity/traverseSchema.ts","../../src/sanity/validation/utils/isInputComponentLike.ts","../../src/sanity/validation/utils/validateInputComponent.ts","../../src/sanity/validation/types/object.ts","../../src/sanity/validation/types/document.ts","../../src/sanity/validation/types/reference.ts","../../src/sanity/validation/types/array.ts","../../src/sanity/validation/types/slug.ts","../../src/sanity/validation/types/file.ts","../../src/sanity/validation/types/image.ts","../../src/sanity/validation/utils/isJSONTypeOf.ts","../../src/sanity/validation/types/block.ts","../../src/sanity/validation/utils/validateNonObjectFieldsProp.ts","../../src/sanity/validation/utils/validateTypeName.ts","../../src/sanity/validation/types/common.ts","../../src/sanity/validation/types/rootType.ts","../../src/sanity/validation/utils/validateExperimentalSearch.ts","../../src/sanity/validation/types/crossDatasetReference.ts","../../src/sanity/validateSchema.ts","../../src/legacy/actionUtils.ts"],"sourcesContent":["import type {SchemaValidationResult} from '../typedefs'\n\n// Temporary solution to ensure we have a central registry over used helpIds\nexport const HELP_IDS = {\n  TYPE_INVALID: 'schema-type-invalid',\n  TYPE_IS_ESM_MODULE: 'schema-type-is-esm-module',\n  TYPE_NAME_RESERVED: 'schema-type-name-reserved',\n  TYPE_MISSING_NAME: 'schema-type-missing-name-or-type',\n  TYPE_MISSING_TYPE: 'schema-type-missing-name-or-type',\n  TYPE_TITLE_RECOMMENDED: 'schema-type-title-is-recommended',\n  TYPE_TITLE_INVALID: 'schema-type-title-is-recommended',\n  OBJECT_FIELDS_INVALID: 'schema-object-fields-invalid',\n  OBJECT_FIELD_NOT_UNIQUE: 'schema-object-fields-invalid',\n  OBJECT_FIELD_NAME_INVALID: 'schema-object-fields-invalid',\n  OBJECT_FIELD_DEFINITION_INVALID_TYPE: 'schema-object-fields-invalid',\n  ARRAY_OF_ARRAY: 'schema-array-of-array',\n  ARRAY_OF_INVALID: 'schema-array-of-invalid',\n  ARRAY_OF_NOT_UNIQUE: 'schema-array-of-invalid',\n  ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT: 'schema-array-of-type-global-type-conflict',\n  ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT: 'schema-array-of-type-builtin-type-conflict',\n  REFERENCE_TO_INVALID: 'schema-reference-to-invalid',\n  REFERENCE_TO_NOT_UNIQUE: 'schema-reference-to-invalid',\n  REFERENCE_INVALID_OPTIONS: 'schema-reference-invalid-options',\n  REFERENCE_INVALID_OPTIONS_LOCATION: 'schema-reference-options-nesting',\n  REFERENCE_INVALID_FILTER_PARAMS_COMBINATION: 'schema-reference-filter-params-combination',\n  SLUG_SLUGIFY_FN_RENAMED: 'slug-slugifyfn-renamed',\n  ASSET_METADATA_FIELD_INVALID: 'asset-metadata-field-invalid',\n  CROSS_DATASET_REFERENCE_INVALID: 'cross-dataset-reference-invalid',\n}\n\nfunction createValidationResult(\n  severity: SchemaValidationResult['severity'],\n  message: string,\n  helpId: string | null\n): SchemaValidationResult {\n  if (helpId && !Object.keys(HELP_IDS).some((id) => HELP_IDS[id] === helpId)) {\n    throw new Error(\n      `Used the unknown helpId \"${helpId}\", please add it to the array in createValidationResult.js`\n    )\n  }\n  return {\n    severity,\n    message,\n    helpId,\n  }\n}\n\nexport const error = (message: string, helpId?: string | null): SchemaValidationResult =>\n  createValidationResult('error', message, helpId)\n\nexport const warning = (message: string, helpId?: string | null): SchemaValidationResult =>\n  createValidationResult('warning', message, helpId)\n\nexport const info = (message: string, helpId?: string | null): SchemaValidationResult =>\n  createValidationResult('info', message, helpId)\n","import type {SchemaType, SchemaTypeDefinition} from '@sanity/types'\nimport {flatten, get} from 'lodash'\nimport {error} from './validation/createValidationResult'\nimport type {ProblemPath, ProblemPathPropertySegment, TypeWithProblems} from './typedefs'\n\n/**\n * @internal\n */\nexport function groupProblems(types: SchemaTypeDefinition[]): TypeWithProblems[] {\n  return flatten<TypeWithProblems>(types.map((type) => getTypeProblems(type))).filter(\n    (type) => type.problems.length > 0\n  )\n}\n\nfunction createTypeWithMembersProblemsAccessor(\n  memberPropertyName: string,\n  getMembers = (type: SchemaType) => get(type, memberPropertyName)\n) {\n  return function getProblems(type, parentPath: ProblemPath): TypeWithProblems[] {\n    const currentPath: ProblemPath = [\n      ...parentPath,\n      {kind: 'type', type: type.type, name: type.name},\n    ]\n\n    const members = getMembers(type) || []\n\n    const memberProblems: TypeWithProblems[][] = Array.isArray(members)\n      ? members.map((memberType) => {\n          const propertySegment: ProblemPathPropertySegment = {\n            kind: 'property',\n            name: memberPropertyName,\n          }\n          const memberPath: ProblemPath = [...currentPath, propertySegment]\n          return getTypeProblems(memberType, memberPath)\n        })\n      : [\n          [\n            {\n              path: currentPath,\n              problems: [error(`Member declaration (${memberPropertyName}) is not an array`)],\n            },\n          ],\n        ]\n\n    return [\n      {\n        path: currentPath,\n        problems: type._problems || [],\n      },\n      ...flatten(memberProblems),\n    ]\n  }\n}\n\nconst arrify = (val) => (Array.isArray(val) ? val : (typeof val === 'undefined' && []) || [val])\n\nconst getObjectProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getImageProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getFileProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getArrayProblems = createTypeWithMembersProblemsAccessor('of')\nconst getReferenceProblems = createTypeWithMembersProblemsAccessor('to', (type) =>\n  'to' in type ? arrify(type.to) : []\n)\nconst getBlockAnnotationProblems = createTypeWithMembersProblemsAccessor('marks.annotations')\nconst getBlockMemberProblems = createTypeWithMembersProblemsAccessor('of')\nconst getBlockProblems = (type, problems) => [\n  ...getBlockAnnotationProblems(type, problems),\n  ...getBlockMemberProblems(type, problems),\n]\n\nfunction getDefaultProblems(type, path = []): TypeWithProblems[] {\n  return [\n    {\n      path: [...path, {kind: 'type', type: type.type, name: type.name}],\n      problems: type._problems || [],\n    },\n  ]\n}\n\nfunction getTypeProblems(type: SchemaTypeDefinition, path = []): TypeWithProblems[] {\n  switch (type.type) {\n    case 'object': {\n      return getObjectProblems(type, path)\n    }\n    case 'document': {\n      return getObjectProblems(type, path)\n    }\n    case 'array': {\n      return getArrayProblems(type, path)\n    }\n    case 'reference': {\n      return getReferenceProblems(type, path)\n    }\n    case 'block': {\n      return getBlockProblems(type, path)\n    }\n    case 'image': {\n      return getImageProblems(type, path)\n    }\n    case 'file': {\n      return getFileProblems(type, path)\n    }\n    default: {\n      return getDefaultProblems(type, path)\n    }\n  }\n}\n","export function getDupes(array, selector = (v) => v) {\n  const dupes = array.reduce((acc, item) => {\n    const key = selector(item)\n    if (!acc[key]) {\n      acc[key] = []\n    }\n    acc[key].push(item)\n    return acc\n  }, {})\n\n  return Object.keys(dupes)\n    .map((key) => (dupes[key].length > 1 ? dupes[key] : null))\n    .filter(Boolean)\n}\n","import {flatten, uniq} from 'lodash'\nimport {getDupes} from '../sanity/validation/utils/getDupes'\n\ntype SchemaType = Record<string, any>\ntype SchemaTypeDef = Record<string, any>\n\ntype VisitContext = {\n  isRoot: boolean\n  isReserved: (typeName: string) => boolean\n  visit: Visitor\n  index: number\n  isDuplicate: (typeName: string) => boolean\n  getType: (typeName: string) => null | SchemaType\n  getTypeNames: () => Array<string>\n}\n\nexport type Visitor = (typeDef: SchemaTypeDef, arg1: VisitContext) => SchemaType\n\nconst NOOP_VISITOR: Visitor = (typeDef) => typeDef\n\nexport class UnknownType {\n  name: string\n\n  constructor(name: string) {\n    this.name = name\n  }\n}\n\nconst TYPE_TYPE = {name: 'type', type: null}\n\nconst FUTURE_RESERVED = ['any', 'time', 'date']\n\nexport function traverseSchema(\n  types: SchemaTypeDef[] = [],\n  coreTypes: SchemaTypeDef[] = [],\n  visitor: Visitor = NOOP_VISITOR\n) {\n  const coreTypesRegistry = Object.create(null)\n  const registry = Object.create(null)\n\n  const coreTypeNames = coreTypes.map((typeDef) => typeDef.name)\n\n  const reservedTypeNames = FUTURE_RESERVED.concat(coreTypeNames)\n\n  const typeNames = types.map((typeDef) => typeDef && typeDef.name).filter(Boolean)\n\n  coreTypes.forEach((coreType) => {\n    coreTypesRegistry[coreType.name] = coreType\n  })\n\n  types.forEach((type, i) => {\n    // Allocate a placeholder for each type\n    registry[(type && type.name) || `__unnamed_${i}`] = {}\n  })\n\n  function getType(typeName) {\n    return typeName === 'type'\n      ? TYPE_TYPE\n      : coreTypesRegistry[typeName] || registry[typeName] || null\n  }\n\n  const duplicateNames = uniq(flatten(getDupes(typeNames)))\n\n  function isDuplicate(typeName) {\n    return duplicateNames.includes(typeName)\n  }\n  function getTypeNames() {\n    return typeNames.concat(coreTypeNames)\n  }\n  function isReserved(typeName) {\n    return typeName === 'type' || reservedTypeNames.includes(typeName)\n  }\n\n  const visitType = (isRoot) => (typeDef, index) => {\n    return visitor(typeDef, {\n      visit: visitType(false),\n      isRoot,\n      getType,\n      getTypeNames,\n      isReserved,\n      isDuplicate,\n      index,\n    })\n  }\n\n  coreTypes.forEach((coreTypeDef) => {\n    Object.assign(coreTypesRegistry[coreTypeDef.name], visitType(coreTypeDef))\n  })\n\n  types.forEach((typeDef, i) => {\n    Object.assign(\n      registry[(typeDef && typeDef.name) || `__unnamed_${i}`],\n      visitType(true)(typeDef, i)\n    )\n  })\n\n  return {\n    get(typeName: string) {\n      const res = registry[typeName] || coreTypesRegistry[typeName]\n      if (res) {\n        return res\n      }\n      throw new Error(`No such type: ${typeName}`)\n    },\n    has(typeName: string): boolean {\n      return typeName in registry || typeName in coreTypesRegistry\n    },\n    getTypeNames(): string[] {\n      return Object.keys(registry)\n    },\n    getTypes() {\n      return this.getTypeNames().map(this.get)\n    },\n    toJSON() {\n      return this.getTypes()\n    },\n  }\n}\n","const coreTypes = [\n  {name: 'array', jsonType: 'array', type: 'type'},\n  {name: 'block', jsonType: 'object', type: 'type'},\n  {name: 'boolean', jsonType: 'boolean', type: 'type'},\n  {name: 'datetime', jsonType: 'string', type: 'type'},\n  {name: 'date', jsonType: 'string', type: 'type'},\n  {name: 'document', jsonType: 'object', type: 'type'},\n  {name: 'email', jsonType: 'string', type: 'type'},\n  {name: 'file', jsonType: 'object', type: 'type'},\n  {name: 'geopoint', jsonType: 'object', type: 'type'},\n  {name: 'image', jsonType: 'object', type: 'type'},\n  {name: 'number', jsonType: 'number', type: 'type'},\n  {name: 'object', jsonType: 'object', type: 'type'},\n  {name: 'reference', jsonType: 'object', type: 'type'},\n  {name: 'crossDatasetReference', jsonType: 'object', type: 'type'},\n  {name: 'slug', jsonType: 'object', type: 'type'},\n  {name: 'string', jsonType: 'string', type: 'type'},\n  {name: 'telephone', jsonType: 'string', type: 'type'},\n  {name: 'text', jsonType: 'string', type: 'type'},\n  {name: 'url', jsonType: 'string', type: 'type'},\n] as const\n\nexport const coreTypeNames = coreTypes.map((t) => t.name)\nexport default coreTypes\n","import {traverseSchema, type Visitor} from '../core/traverseSchema'\nimport type {_FIXME_} from './typedefs'\nimport coreTypes from './coreTypes'\n\nexport function traverseSanitySchema(schemaTypes: _FIXME_[], visitor: Visitor) {\n  return traverseSchema(schemaTypes, coreTypes as _FIXME_, visitor)\n}\n","const REACT_SYM_RE = /^Symbol\\(react\\..+\\)$/\n\nexport function isInputComponentLike(value: any) {\n  const type = typeof value\n  // Note: we're not using `isValidElementType` from react-is here since it accepts too much, e.g. any strings.\n  return (\n    type === 'function' ||\n    (typeof value?.$$typeof === 'symbol' && REACT_SYM_RE.test(String(value?.$$typeof)))\n  )\n}\n","import {warning} from '../createValidationResult'\nimport inspect from '../../inspect'\nimport {isInputComponentLike} from './isInputComponentLike'\n\nexport function validateInputComponent(typeDef: any) {\n  if ('components' in typeDef && !isInputComponentLike(typeDef.components.input)) {\n    return [\n      warning(\n        `The \\`components.input\\` property is set but does not appear to be a valid React component (expected a function, but saw ${inspect(\n          typeDef.components.input\n        )}). If you have imported a custom input component, please verify that you have imported the correct named/default export.`\n      ),\n    ]\n  }\n\n  return []\n}\n","import {isPlainObject} from 'lodash'\nimport {error, HELP_IDS, warning} from '../createValidationResult'\nimport inspect from '../../inspect'\nimport {validateInputComponent} from '../utils/validateInputComponent'\n\nconst VALID_FIELD_RE = /^[A-Za-z]+[0-9A-Za-z_]*$/\nconst CONVENTIONAL_FIELD_RE = /^[A-Za-z_]+[0-9A-Za-z_]*$/\ninterface Field {\n  name: string\n}\n\ninterface PreviewConfig {\n  select?: {\n    [key: string]: string\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  prepare?: Function\n}\n\nfunction validateFieldName(name): Array<any> {\n  if (typeof name !== 'string') {\n    return [\n      error(\n        `Field names must be strings. Saw \"${inspect(name)}\"`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID\n      ),\n    ]\n  }\n  if (name.startsWith('_')) {\n    return [\n      error(\n        `Invalid field name \"${name}\". Field names cannot start with underscores \"_\" as it's reserved for system fields.`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID\n      ),\n    ]\n  }\n\n  if (!VALID_FIELD_RE.test(name)) {\n    return [\n      error(\n        `Invalid field name: \"${name}\". Fields can only contain characters from A-Z, numbers and underscores and should not start with a number (must pass the regular expression ${String(\n          VALID_FIELD_RE\n        )}).`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID\n      ),\n    ]\n  }\n  if (!CONVENTIONAL_FIELD_RE.test(name)) {\n    return [\n      warning(\n        'Thats an interesting field name for sure! But it is... how to put it... a bit... unconventional?' +\n          ' It may be wise to keep special characters out of field names for easier access later on.'\n      ),\n      HELP_IDS.OBJECT_FIELD_NAME_INVALID,\n    ]\n  }\n  return []\n}\n\nexport function validateField(field, _visitorContext) {\n  if (!isPlainObject(field)) {\n    return [\n      error(\n        `Incorrect type for field definition - should be an object, saw ${inspect(field)}`,\n        HELP_IDS.OBJECT_FIELD_DEFINITION_INVALID_TYPE\n      ),\n    ]\n  }\n\n  const problems = []\n  problems.push(\n    ...('name' in field\n      ? validateFieldName(field.name)\n      : [error('Missing field name', HELP_IDS.OBJECT_FIELD_NAME_INVALID)])\n  )\n  problems.push(...validateInputComponent(field))\n  return problems\n}\n\nfunction getDuplicateFields(array: Array<Field>): Array<Array<Field>> {\n  const dupes: {[name: string]: Array<Field>} = {}\n  array.forEach((field) => {\n    if (!dupes[field.name]) {\n      dupes[field.name] = []\n    }\n    dupes[field.name].push(field)\n  })\n  return Object.keys(dupes)\n    .map((fieldName) => (dupes[fieldName].length > 1 ? dupes[fieldName] : null))\n    .filter(Boolean)\n}\n\nexport function validateFields(fields: any, options = {allowEmpty: false}) {\n  const problems = []\n  const fieldsIsArray = Array.isArray(fields)\n  if (!fieldsIsArray) {\n    return [\n      error(\n        `The \"fields\" property must be an array of fields. Instead saw \"${typeof fields}\"`,\n        HELP_IDS.OBJECT_FIELDS_INVALID\n      ),\n    ]\n  }\n\n  const fieldsWithNames = fields.filter((field) => typeof field.name === 'string')\n\n  getDuplicateFields(fieldsWithNames).forEach((dupes) => {\n    problems.push(\n      error(\n        `Found ${dupes.length} fields with name \"${dupes[0].name}\" in object`,\n        HELP_IDS.OBJECT_FIELD_NOT_UNIQUE\n      )\n    )\n  })\n\n  if (fields.length === 0 && !options.allowEmpty) {\n    problems.push(error('Object should have at least one field', HELP_IDS.OBJECT_FIELDS_INVALID))\n  }\n\n  return problems\n}\n\nexport function validatePreview(preview: PreviewConfig) {\n  if (!isPlainObject(preview)) {\n    return [error(`The \"preview\" property must be an object, instead saw \"${typeof preview}\"`)]\n  }\n\n  if (typeof preview.prepare !== 'undefined' && typeof preview.prepare !== 'function') {\n    return [\n      error(\n        `The \"preview.prepare\" property must be a function, instead saw \"${typeof preview.prepare}\"`\n      ),\n    ]\n  }\n\n  if (!preview.select) {\n    return []\n  }\n\n  if (!isPlainObject(preview.select)) {\n    return [\n      error(\n        `The \"preview.select\" property must be an object, instead saw \"${typeof preview.prepare}\"`\n      ),\n    ]\n  }\n\n  return Object.keys(preview.select).reduce((errs, key) => {\n    return typeof preview.select[key] === 'string'\n      ? errs\n      : errs.concat(\n          error(\n            `The key \"${key}\" of \"preview.select\" must be a string, instead saw \"${typeof preview\n              .select[key]}\"`\n          )\n        )\n  }, [])\n}\n\nexport default (typeDef, visitorContext) => {\n  let problems = validateFields(typeDef.fields)\n\n  let preview = typeDef.preview\n  if (preview) {\n    const previewErrors = validatePreview(typeDef.preview)\n    problems = problems.concat(previewErrors)\n    preview = previewErrors.some((err) => err.severity === 'error') ? {} : preview\n  }\n\n  if (\n    typeDef.type !== 'document' &&\n    typeDef.type !== 'object' &&\n    typeof typeDef.initialValue !== 'undefined'\n  ) {\n    problems.push(\n      error(`The \"initialValue\" property is currently only supported for document & object types.`)\n    )\n  }\n\n  return {\n    ...typeDef,\n    preview,\n    fields: (Array.isArray(typeDef.fields) ? typeDef.fields : []).map((field, index) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","import {isPlainObject} from 'lodash'\nimport {error} from '../createValidationResult'\nimport object from './object'\n\nexport default (typeDefinition, visitorContext) => {\n  const typeDef = object(typeDefinition, visitorContext)\n  const {initialValue, initialValues} = typeDef\n\n  const hasInitialValue = typeof initialValue !== 'undefined'\n  if (hasInitialValue && !isPlainObject(initialValue) && typeof initialValue !== 'function') {\n    typeDef._problems.push(\n      error(`The \"initialValue\" property must be either a plain object or a function`)\n    )\n  }\n\n  if (typeof initialValues !== 'undefined') {\n    typeDef._problems.push(error(`Found property \"initialValues\" - did you mean \"initialValue\"?`))\n  }\n\n  return typeDef\n}\n","import {error, HELP_IDS} from '../createValidationResult'\nimport {flatten, isPlainObject} from 'lodash'\nimport {getDupes} from '../utils/getDupes'\nimport {SchemaValidationResult} from '../../typedefs'\n\nfunction normalizeToProp(typeDef) {\n  if (Array.isArray(typeDef.to)) {\n    return typeDef.to\n  }\n  return typeDef.to ? [typeDef.to] : typeDef.to\n}\n\nexport default (typeDef, visitorContext) => {\n  const isValidTo = Array.isArray(typeDef.to) || isPlainObject(typeDef.to)\n  const normalizedTo = normalizeToProp(typeDef)\n\n  const problems = flatten([\n    isValidTo\n      ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.REFERENCE_TO_INVALID\n          )\n        )\n      : error(\n          'The reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n          HELP_IDS.REFERENCE_TO_INVALID\n        ),\n  ])\n\n  if (isValidTo && normalizedTo.length === 0) {\n    problems.push(\n      error(\n        'The reference type should define at least one accepted type. Please check the \"to\" property.',\n        HELP_IDS.REFERENCE_TO_INVALID\n      )\n    )\n  }\n\n  problems.push(...getOptionErrors(typeDef))\n\n  return {\n    ...typeDef,\n    to: (isValidTo ? normalizedTo : []).map(visitorContext.visit),\n    _problems: problems,\n  }\n}\n\nfunction getOptionErrors(typeDef: any): SchemaValidationResult[] {\n  const {options} = typeDef\n  const problems = [] as SchemaValidationResult[]\n\n  problems.push(\n    ...['filter', 'filterParams']\n      .filter((key) => key in typeDef)\n      .map((key) =>\n        error(\n          `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n          HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION\n        )\n      )\n  )\n\n  if (!options) {\n    return problems\n  }\n\n  if (!isPlainObject(options)) {\n    return problems.concat(\n      error(\n        'The reference type expects `options` to be an object',\n        HELP_IDS.REFERENCE_INVALID_OPTIONS\n      )\n    )\n  }\n\n  if (typeof options.filter === 'function' && typeof options.filterParams !== 'undefined') {\n    return problems.concat(\n      error(\n        '`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.',\n        HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION\n      )\n    )\n  }\n\n  if (typeof options.filter === 'function' || (!options.filter && !options.filterParams)) {\n    return problems\n  }\n\n  if (typeof options.filter !== 'string') {\n    return problems.concat(\n      error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`)\n    )\n  }\n\n  if (typeof options.filterParams !== 'undefined' && !isPlainObject(options.filterParams)) {\n    return problems.concat(error(`If set, \\`filterParams\\` must be an object.`))\n  }\n\n  if (options.filterParams) {\n    return problems.concat(\n      Object.keys(options.filterParams)\n        .filter((key) => key.startsWith('__') || key.startsWith('$'))\n        .map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`))\n    )\n  }\n\n  return problems\n}\n","import {error, HELP_IDS, warning} from '../createValidationResult'\nimport {flatten} from 'lodash'\nimport {getDupes} from '../utils/getDupes'\nimport {coreTypeNames} from '../../coreTypes'\n\nexport default (typeDef, visitorContext) => {\n  // name should already have been marked\n  const ofIsArray = Array.isArray(typeDef.of)\n\n  if (ofIsArray) {\n    const invalid = typeDef.of.reduce((errs, def, idx) => {\n      if (typeof def.name === 'string') {\n        // If an array member has been given a \"local\" type name, we want to trigger an error if the given member type name\n        // is one of the builtin types\n        //\n        // The following examples should be an error (where book is an existing root level type and reference is a built-in type):\n        //  - (…) of: [{type: 'book', name: 'image'}]\n        //  - (…) of: [{type: 'book', name: 'object'}]\n        //  - (…) of: [{type: 'object', name: 'reference'}]\n        // The following examples are valid (where \"address\" is not defined as a global object type)\n        //  - (…) of: [{type: 'object', name: 'address'}]\n        // The following examples are redundant, but should be allowed (at least for now)\n        //  - (…) of: [{type: 'object', name: 'object'}]\n        //  - (…) of: [{type: 'image', name: 'image'}]\n\n        if (\n          // specifying the same name as the type is redundant, but should not be a hard error at this point\n          // Consider showing a warning for this and deprecate this ability eventually\n          def.name !== def.type &&\n          coreTypeNames.includes(def.name)\n        ) {\n          return errs.concat(\n            error(\n              `Found array member declaration with the same type name as a built-in type (\"${def.name}\"). Array members can not be given the same name as a built-in type.`,\n              HELP_IDS.ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT\n            )\n          )\n        }\n      }\n\n      if (def.type === 'object' && def.name && visitorContext.getType(def.name)) {\n        return errs.concat(\n          warning(\n            `Found array member declaration with the same name as the global schema type \"${def.name}\". It's recommended to use a unique name to avoid possibly incompatible data types that shares the same name.`,\n            HELP_IDS.ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT\n          )\n        )\n      }\n      if (def.type === 'array') {\n        return errs.concat(\n          error(\n            `Found array member declaration of type \"array\" - multidimensional arrays are not currently supported by Sanity`,\n            HELP_IDS.ARRAY_OF_ARRAY\n          )\n        )\n      }\n\n      if (def) {\n        return errs\n      }\n\n      const err = `Found ${def === null ? 'null' : typeof def}, expected member declaration`\n      return errs.concat(\n        error(\n          `Found invalid type member declaration in array at index ${idx}: ${err}`,\n          HELP_IDS.ARRAY_OF_INVALID\n        )\n      )\n    }, [])\n\n    if (invalid.length > 0) {\n      return {\n        ...typeDef,\n        of: [],\n        _problems: invalid,\n      }\n    }\n  }\n\n  const problems = flatten([\n    ofIsArray\n      ? getDupes(typeDef.of, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in array. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.ARRAY_OF_NOT_UNIQUE\n          )\n        )\n      : error(\n          'The array type is missing or having an invalid value for the required \"of\" property',\n          HELP_IDS.ARRAY_OF_INVALID\n        ),\n  ])\n  const of = ofIsArray ? typeDef.of : []\n\n  // Don't allow object types without a name in block arrays\n  const hasObjectTypesWithoutName = of.some(\n    (type) => type.type === 'object' && typeof type.name === 'undefined'\n  )\n  const hasBlockType = of.some((ofType) => ofType.type === 'block')\n  if (hasBlockType && hasObjectTypesWithoutName) {\n    problems.push(\n      error(\n        \"The array type's 'of' property can't have an object type without a 'name' property as member, when the 'block' type is also a member of that array.\",\n        HELP_IDS.ARRAY_OF_INVALID\n      )\n    )\n  }\n\n  if (typeDef?.options?.list && typeDef?.options?.layout === 'tags') {\n    problems.push(\n      warning(\n        'Found array member declaration with both tags layout and a list of predefined values. If you want to display a list of predefined values, remove the tags layout from `options`.'\n      )\n    )\n  }\n\n  return {\n    ...typeDef,\n    of: of.map(visitorContext.visit),\n    _problems: problems,\n  }\n}\n","import {warning, HELP_IDS} from '../createValidationResult'\n\nexport default (typeDef, visitorContext) => {\n  const problems = []\n\n  if (typeDef.options && typeDef.options.slugifyFn) {\n    problems.push(\n      warning(\n        'Heads up! The \"slugifyFn\" option has been renamed to \"slugify\".',\n        HELP_IDS.SLUG_SLUGIFY_FN_RENAMED\n      )\n    )\n\n    typeDef.options.slugify = typeDef.options.slugifyFn\n  }\n\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n","import {error, HELP_IDS} from '../createValidationResult'\nimport {validateFields, validateField} from './object'\n\nexport default (typeDef, visitorContext) => {\n  const problems = []\n  const fields = typeDef.fields\n\n  if (fields) {\n    problems.push(...validateFields(fields, {allowEmpty: true}))\n  }\n\n  if (\n    typeDef.options &&\n    typeof typeDef.options.metadata !== 'undefined' &&\n    !Array.isArray(typeDef.options.metadata)\n  ) {\n    problems.push(\n      error(\n        `Invalid type for file \\`metadata\\` field - must be an array of strings`,\n        HELP_IDS.ASSET_METADATA_FIELD_INVALID\n      )\n    )\n  }\n\n  return {\n    ...typeDef,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","import {error, warning, HELP_IDS} from '../createValidationResult'\nimport {validateFields, validateField} from './object'\n\nconst autoMeta = ['dimensions', 'hasAlpha', 'isOpaque']\n\nexport default (typeDef, visitorContext) => {\n  const problems = []\n  const fields = typeDef.fields\n\n  if (fields) {\n    problems.push(...validateFields(fields, {allowEmpty: true}))\n  }\n\n  let options = typeDef.options\n  const metadata = options?.metadata\n  const superfluousMeta = Array.isArray(metadata)\n    ? metadata.filter((meta) => autoMeta.includes(meta))\n    : []\n\n  if (typeof metadata !== 'undefined' && !Array.isArray(metadata)) {\n    problems.push(\n      error(\n        `Invalid type for image \\`metadata\\` field - must be an array of strings`,\n        HELP_IDS.ASSET_METADATA_FIELD_INVALID\n      )\n    )\n  } else if (superfluousMeta.length > 0) {\n    problems.push(\n      warning(\n        `Image \\`metadata\\` field contains superfluous properties (they are always included): ${superfluousMeta.join(\n          ', '\n        )}`\n      )\n    )\n    options = {...options, metadata: metadata.filter((meta) => !autoMeta.includes(meta))}\n  }\n\n  return {\n    ...typeDef,\n    options,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","export function isJSONTypeOf(type, jsonType, visitorContext) {\n  if ('jsonType' in type) {\n    return type.jsonType === jsonType\n  }\n  const parentType = visitorContext.getType(type.type)\n  if (!parentType) {\n    throw new Error(`Could not resolve jsonType of ${type.name}. No parent type found`)\n  }\n  return isJSONTypeOf(parentType, jsonType, visitorContext)\n}\n","import {omit, isPlainObject} from 'lodash'\nimport humanizeList from 'humanize-list'\nimport {error, warning} from '../createValidationResult'\nimport {isJSONTypeOf} from '../utils/isJSONTypeOf'\n\nconst getTypeOf = (thing) => (Array.isArray(thing) ? 'array' : typeof thing)\nconst quote = (str) => `\"${str}\"`\nconst allowedKeys = [\n  'lists',\n  'marks',\n  'name',\n  'of',\n  'options',\n  'styles',\n  'title',\n  'type',\n  'validation',\n]\nconst allowedMarkKeys = ['decorators', 'annotations']\nconst allowedStyleKeys = ['title', 'value', 'blockEditor']\nconst allowedDecoratorKeys = ['title', 'value', 'blockEditor', 'icon']\n\nexport default function validateBlockType(typeDef, visitorContext) {\n  const problems = []\n  let styles = typeDef.styles\n  let marks = typeDef.marks\n  let members = typeDef.of\n\n  const disallowedKeys = Object.keys(typeDef).filter(\n    (key) => !allowedKeys.includes(key) && !key.startsWith('_')\n  )\n\n  if (disallowedKeys.length > 0) {\n    problems.push(\n      error(\n        `Found unknown properties for block declaration: ${humanizeList(disallowedKeys.map(quote))}`\n      )\n    )\n  }\n\n  if (marks) {\n    marks = validateMarks(typeDef.marks, visitorContext, problems)\n  }\n\n  if (styles) {\n    styles = validateStyles(styles, visitorContext, problems)\n  }\n\n  if (members) {\n    members = validateMembers(members, visitorContext, problems)\n  }\n\n  return {\n    ...omit(typeDef, disallowedKeys),\n    marks,\n    styles,\n    of: members,\n    _problems: problems,\n  }\n}\n\nfunction validateMarks(marks, visitorContext, problems) {\n  let decorators = marks.decorators\n  let annotations = marks.annotations\n\n  if (!isPlainObject(marks)) {\n    problems.push(error(`\"marks\" declaration should be an object, got ${getTypeOf(marks)}`))\n    return problems\n  }\n\n  const disallowedMarkKeys = Object.keys(marks).filter(\n    (key) => !allowedMarkKeys.includes(key) && !key.startsWith('_')\n  )\n\n  if (disallowedMarkKeys.length > 0) {\n    problems.push(\n      error(\n        `Found unknown properties for block declaration: ${humanizeList(\n          disallowedMarkKeys.map(quote)\n        )}`\n      )\n    )\n  }\n\n  if (decorators && !Array.isArray(decorators)) {\n    problems.push(\n      error(`\"marks.decorators\" declaration should be an array, got ${getTypeOf(decorators)}`)\n    )\n  } else if (decorators) {\n    decorators = validateDecorators(decorators, visitorContext, problems)\n  }\n\n  if (annotations && !Array.isArray(annotations)) {\n    problems.push(\n      error(`\"marks.annotations\" declaration should be an array, got ${getTypeOf(annotations)}`)\n    )\n  } else if (annotations) {\n    annotations = validateAnnotations(annotations, visitorContext, problems)\n  }\n\n  return {...marks, decorators, annotations}\n}\n\nfunction validateStyles(styles, visitorContext, problems) {\n  if (!Array.isArray(styles)) {\n    problems.push(error(`\"styles\" declaration should be an array, got ${getTypeOf(styles)}`))\n    return problems\n  }\n\n  styles.forEach((style, index) => {\n    if (!isPlainObject(style)) {\n      problems.push(error(`Style must be an object, got ${getTypeOf(style)}`))\n      return\n    }\n\n    const name = style.value || `#${index}`\n    const disallowedKeys = Object.keys(style).filter(\n      (key) => !allowedStyleKeys.includes(key) && !key.startsWith('_')\n    )\n\n    if (disallowedKeys.length > 0) {\n      problems.push(\n        error(\n          `Found unknown properties for style ${name}: ${humanizeList(disallowedKeys.map(quote))}`\n        )\n      )\n    }\n\n    if (!style.value) {\n      problems.push(error(`Style #${index} is missing required \"value\" property`))\n    } else if (typeof style.value !== 'string') {\n      problems.push(\n        error(\n          `Style #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n            style.value\n          )}`\n        )\n      )\n    } else if (!style.title) {\n      problems.push(warning(`Style ${name} is missing recommended \"title\" property`))\n    }\n  })\n  return styles\n}\n\nfunction validateDecorators(decorators, visitorContext, problems) {\n  decorators.forEach((decorator, index) => {\n    if (!isPlainObject(decorator)) {\n      problems.push(error(`Annotation must be an object, got ${getTypeOf(decorator)}`))\n      return\n    }\n\n    const name = decorator.value || `#${index}`\n    const disallowedKeys = Object.keys(decorator).filter(\n      (key) => !allowedDecoratorKeys.includes(key) && !key.startsWith('_')\n    )\n\n    if (disallowedKeys.length > 0) {\n      problems.push(\n        error(\n          `Found unknown properties for decorator ${name}: ${humanizeList(\n            disallowedKeys.map(quote)\n          )}`\n        )\n      )\n    }\n\n    if (!decorator.value) {\n      problems.push(error(`Decorator #${index} is missing required \"value\" property`))\n    } else if (typeof decorator.value !== 'string') {\n      problems.push(\n        error(\n          `Decorator #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n            decorator.value\n          )}`\n        )\n      )\n    } else if (!decorator.title) {\n      problems.push(warning(`Decorator ${name} is missing recommended \"title\" property`))\n    }\n  })\n  return decorators\n}\n\nfunction validateAnnotations(annotations, visitorContext, problems) {\n  return annotations.map((annotation) => {\n    if (!isPlainObject(annotation)) {\n      return {\n        ...annotation,\n        _problems: [error(`Annotation must be an object, got ${getTypeOf(annotation)}`)],\n      }\n    }\n\n    const {_problems} = visitorContext.visit(annotation, visitorContext)\n    const targetType = annotation.type && visitorContext.getType(annotation.type)\n    if (targetType && !isJSONTypeOf(targetType, 'object', visitorContext)) {\n      _problems.push(\n        error(\n          `Annotation cannot have type \"${annotation.type}\" - annotation types must inherit from object`\n        )\n      )\n    }\n\n    return {...annotation, _problems}\n  })\n}\n\nfunction validateMembers(members, visitorContext, problems) {\n  if (!Array.isArray(members)) {\n    problems.push(error(`\"of\" declaration should be an array, got ${getTypeOf(members)}`))\n    return undefined\n  }\n\n  return members.map((member) => {\n    const {_problems} = visitorContext.visit(member, visitorContext)\n    return {...member, _problems}\n  })\n}\n","import type {SchemaType} from '@sanity/types'\nimport type {SchemaValidationResult} from '../../typedefs'\nimport {error} from '../createValidationResult'\n\nexport function validateNonObjectFieldsProp(\n  typeDef: SchemaType,\n  visitorContext\n): SchemaValidationResult[] {\n  if (!('fields' in typeDef)) {\n    return []\n  }\n\n  let type = typeDef\n  while (type && !type.jsonType) {\n    type = visitorContext.getType(type.type)\n  }\n\n  if (type && type.jsonType !== 'object') {\n    return [error(`Type has propery \"fields\", but is not an object/document type.`)]\n  }\n\n  return []\n}\n","import leven from 'leven'\nimport humanize from 'humanize-list'\nimport {error, HELP_IDS} from '../createValidationResult'\n\nconst quote = (str) => `\"${str}\"`\n\nexport function validateTypeName(typeName: string, visitorContext) {\n  const possibleTypeNames = visitorContext.getTypeNames()\n\n  if (!typeName) {\n    return [\n      error(\n        `Type is missing a type. Valid types are: ${humanize(possibleTypeNames)}`,\n        HELP_IDS.TYPE_MISSING_TYPE\n      ),\n    ]\n  }\n\n  if (typeof typeName !== 'string') {\n    return [\n      error(\n        `Type has an invalid \"type\"-property - should be a string. Valid types are: ${humanize(\n          possibleTypeNames\n        )}`,\n        HELP_IDS.TYPE_MISSING_TYPE\n      ),\n    ]\n  }\n\n  const isValid = possibleTypeNames.includes(typeName)\n\n  if (!isValid) {\n    const suggestions = possibleTypeNames\n      .map((possibleTypeName) => {\n        return [leven(typeName, possibleTypeName), possibleTypeName]\n      })\n      .filter(([distance]) => distance < 3)\n      .map(([_, name]) => name)\n\n    const suggestion =\n      suggestions.length > 0\n        ? ` Did you mean ${humanize(suggestions.map(quote), {conjunction: 'or'})}?`\n        : ''\n\n    return [\n      error(\n        `Unknown type: ${typeName}.${suggestion}\\n\\nValid types are: ${humanize(possibleTypeNames)}`\n      ),\n    ]\n  }\n  return []\n}\n","import {validateNonObjectFieldsProp} from '../utils/validateNonObjectFieldsProp'\nimport {validateTypeName} from '../utils/validateTypeName'\n\nexport default (typeDef, visitorContext) => {\n  return {\n    ...typeDef,\n    _problems: [\n      ...validateTypeName(typeDef.type, visitorContext),\n      ...validateNonObjectFieldsProp(typeDef, visitorContext),\n    ].filter(Boolean),\n  }\n}\n","import {error, HELP_IDS, warning} from '../createValidationResult'\nimport {validateInputComponent} from '../utils/validateInputComponent'\n\nexport default (typeDef, visitorContext) => {\n  const hasName = Boolean(typeDef.name)\n  if (!hasName && Object.keys(typeDef).length === 1) {\n    // Short-circuit on obviously invalid types (only key is _problems)\n    return {\n      ...typeDef,\n      _problems: [\n        error(\n          'Invalid/undefined type declaration, check declaration or the import/export of the schema type.',\n          HELP_IDS.TYPE_INVALID\n        ),\n      ],\n    }\n  }\n\n  const problems = []\n  if (looksLikeEsmModule(typeDef)) {\n    problems.push(\n      error(\n        'Type appears to be an ES6 module imported through CommonJS require - use an import statement or access the `.default` property',\n        HELP_IDS.TYPE_IS_ESM_MODULE\n      )\n    )\n  } else if (!hasName) {\n    problems.push(error('Missing type name', HELP_IDS.TYPE_MISSING_NAME))\n  } else if (visitorContext.isReserved(typeDef.name)) {\n    problems.push(\n      error(`Invalid type name: \"${typeDef.name}\" is a reserved name.`, HELP_IDS.TYPE_NAME_RESERVED)\n    )\n  }\n\n  if (visitorContext.isDuplicate(typeDef.name)) {\n    problems.push(\n      error(\n        `Invalid type name: A type with name \"${typeDef.name}\" is already defined in the schema.`\n      )\n    )\n  }\n\n  problems.push(...validateInputComponent(typeDef))\n\n  if (!('title' in typeDef)) {\n    problems.push(\n      warning(\n        \"Type is missing title. It's recommended to always set a descriptive title.\",\n        HELP_IDS.TYPE_TITLE_RECOMMENDED\n      )\n    )\n  } else if (typeof typeDef.title !== 'string') {\n    problems.push(warning('Type title is not a string.', HELP_IDS.TYPE_TITLE_INVALID))\n  }\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n\nfunction looksLikeEsmModule(typeDef) {\n  return !typeDef.name && typeDef.default && (typeDef.default.name || typeDef.default.title)\n}\n","import {isPlainObject} from 'lodash'\n\nexport const validateExperimentalSearch = (configs): string[] => {\n  if (!Array.isArray(configs)) {\n    return ['The search config of a document type must be an array of search config objects']\n  }\n  return configs\n    .map((conf) => {\n      if (!isPlainObject(conf)) {\n        return 'Search config must be an object of {path: string, weight: number}'\n      }\n      return null\n    })\n    .filter(Boolean)\n}\n","import {flatten, isPlainObject} from 'lodash'\nimport {error, HELP_IDS} from '../createValidationResult'\nimport {getDupes} from '../utils/getDupes'\nimport {SchemaValidationResult} from '../../typedefs'\nimport {validateExperimentalSearch} from '../utils/validateExperimentalSearch'\n\nfunction normalizeToProp(typeDef) {\n  if (Array.isArray(typeDef.to)) {\n    return typeDef.to\n  }\n  return typeDef.to ? [typeDef.to] : typeDef.to\n}\n\nconst VALID_DATASET = /^[a-z0-9~][-_a-z0-9]+$/\nexport function isValidDatasetName(name: string): string | true {\n  const isValid = name.length >= 2 && name.toLowerCase() === name && VALID_DATASET.test(name)\n  return (\n    isValid ||\n    `The provided dataset \"${name}\" doesn't look like a valid dataset. Dataset names must be more than 2 characters, can only contain lowercase characters, numbers, underscores and dashes and can not start with a dash or an underscore`\n  )\n}\n\nconst VALID_TOKEN_ID = /^[a-zA-Z0-9_][a-zA-Z0-9_-]+$/\nexport function isValidTokenId(tokenId: string): string | true {\n  const isValid = tokenId.length >= 2 && VALID_TOKEN_ID.test(tokenId)\n  return (\n    isValid ||\n    `The provided tokenId \"${tokenId}\" is invalid. The tokenId must be a string made up of at least 2 characters in the a-zA-Z0-9_- range and cannot start with a - (dash) character`\n  )\n}\n\nexport default (typeDef, visitorContext) => {\n  const isValidTo = Array.isArray(typeDef.to) || isPlainObject(typeDef.to)\n  const normalizedTo = normalizeToProp(typeDef)\n\n  const problems = flatten([\n    isValidTo\n      ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n          )\n        )\n      : error(\n          'The cross dataset reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n        ),\n  ])\n\n  if (isValidTo && normalizedTo.length === 0) {\n    problems.push(\n      error(\n        'The cross dataset reference type should define at least one referenced type. Please check the \"to\" property.',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    )\n  }\n\n  normalizedTo.forEach((crossDatasetTypeDef, index) => {\n    if (!crossDatasetTypeDef.type) {\n      problems.push(\n        error(\n          `The referenced type at index ${index} must be named. Specify the name of the type you want to create references to.`,\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n        )\n      )\n    }\n\n    if (!isPlainObject(crossDatasetTypeDef.preview)) {\n      problems.push(\n        error(\n          `Missing required preview config for the referenced type \"${\n            crossDatasetTypeDef.type || '<unknown type>'\n          }\"`,\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n        )\n      )\n    }\n    validateExperimentalSearch(crossDatasetTypeDef.__experimental_search).forEach((err) => {\n      problems.push(\n        error(\n          `Invalid \"__experimental_search\" config for referenced type \"${\n            crossDatasetTypeDef.type || '<unknown type>'\n          }\": ${err}`,\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n        )\n      )\n    })\n  })\n\n  if (typeof typeDef.tokenId === 'string') {\n    const validationResult = isValidTokenId(typeDef.tokenId)\n    if (validationResult !== true) {\n      problems.push(error(validationResult, HELP_IDS.CROSS_DATASET_REFERENCE_INVALID))\n    }\n  }\n\n  if (typeof typeDef.projectId !== 'string') {\n    problems.push(\n      error(\n        'A cross dataset reference must specify a `projectId`',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    )\n  }\n  if (typeof typeDef.dataset === 'string') {\n    const datasetValidation = isValidDatasetName(typeDef.dataset)\n    if (datasetValidation !== true) {\n      problems.push(error(datasetValidation, HELP_IDS.CROSS_DATASET_REFERENCE_INVALID))\n    }\n  } else {\n    problems.push(\n      error(\n        'A cross dataset reference must specify a `dataset`',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    )\n  }\n\n  if (typeDef.studioUrl && typeof typeDef.studioUrl !== 'function') {\n    problems.push(\n      error(\n        'The \"studioUrl\" property on a cross dataset reference must be a function taking \"{id, type}\" as argument and returning a studio url.',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID\n      )\n    )\n  }\n\n  problems.push(...getOptionErrors(typeDef))\n\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n\nfunction getOptionErrors(typeDef: any): SchemaValidationResult[] {\n  const {options} = typeDef\n  const problems = [] as SchemaValidationResult[]\n\n  problems.push(\n    ...['filter', 'filterParams']\n      .filter((key) => key in typeDef)\n      .map((key) =>\n        error(\n          `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n          HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION\n        )\n      )\n  )\n\n  if (!options) {\n    return problems\n  }\n\n  if (!isPlainObject(options)) {\n    return problems.concat(\n      error(\n        'The reference type expects `options` to be an object',\n        HELP_IDS.REFERENCE_INVALID_OPTIONS\n      )\n    )\n  }\n\n  if (typeof options.filter === 'function' && typeof options.filterParams !== 'undefined') {\n    return problems.concat(\n      error(\n        '`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.',\n        HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION\n      )\n    )\n  }\n\n  if (typeof options.filter === 'function' || (!options.filter && !options.filterParams)) {\n    return problems\n  }\n\n  if (typeof options.filter !== 'string') {\n    return problems.concat(\n      error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`)\n    )\n  }\n\n  if (typeof options.filterParams !== 'undefined' && !isPlainObject(options.filterParams)) {\n    return problems.concat(error(`If set, \\`filterParams\\` must be an object.`))\n  }\n\n  if (options.filterParams) {\n    return problems.concat(\n      Object.keys(options.filterParams)\n        .filter((key) => key.startsWith('__') || key.startsWith('$'))\n        .map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`))\n    )\n  }\n\n  return problems\n}\n","import {traverseSanitySchema} from './traverseSchema'\nimport object from './validation/types/object'\nimport documentVisitor from './validation/types/document'\nimport reference from './validation/types/reference'\nimport array from './validation/types/array'\nimport slug from './validation/types/slug'\nimport file from './validation/types/file'\nimport image from './validation/types/image'\nimport block from './validation/types/block'\nimport common from './validation/types/common'\nimport rootType from './validation/types/rootType'\nimport crossDatasetReference from './validation/types/crossDatasetReference'\nimport {_FIXME_} from './typedefs'\n\nconst typeVisitors = {\n  array,\n  object,\n  slug,\n  file,\n  image,\n  block,\n  document: documentVisitor,\n  reference: reference,\n  crossDatasetReference: crossDatasetReference,\n}\n\nconst getNoopVisitor = (visitorContext) => (schemaDef) => ({\n  name: `<unnamed_type_@_index_${visitorContext.index}>`,\n  ...schemaDef,\n  _problems: [],\n})\n\nfunction combine(...visitors) {\n  return (schemaType, visitorContext) => {\n    return visitors.reduce(\n      (result, visitor) => {\n        const res = visitor(result, visitorContext)\n        return {\n          ...res,\n          _problems: result._problems.concat(res._problems),\n        }\n      },\n      {_problems: [], ...schemaType}\n    )\n  }\n}\n\n/**\n * @internal\n */\nexport function validateSchema(schemaTypes: _FIXME_) {\n  return traverseSanitySchema(schemaTypes, (schemaDef, visitorContext) => {\n    const typeVisitor =\n      (schemaDef && schemaDef.type && typeVisitors[schemaDef.type]) ||\n      getNoopVisitor(visitorContext)\n\n    if (visitorContext.isRoot) {\n      return combine(rootType, common, typeVisitor)(schemaDef, visitorContext)\n    }\n\n    return combine(common, typeVisitor)(schemaDef, visitorContext)\n  })\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {SchemaType} from '@sanity/types'\nimport {difference} from 'lodash'\n\nconst ACTIONS_FLAG = '__experimental_actions'\n\nconst DEFAULT_ACTIONS = ['create', 'update', 'delete', 'publish']\nconst VALID_ACTIONS = DEFAULT_ACTIONS\n\n// todo: enable this when officially deprecating experimental actions\nconst DEPRECATE_EXPERIMENTAL_ACTIONS = false\n\nconst hasWarned = {}\nconst readActions = (schemaType: SchemaType) => {\n  if (DEPRECATE_EXPERIMENTAL_ACTIONS && !(schemaType.name in hasWarned)) {\n    console.warn(`Heads up! Experimental actions is now deprecated and replaced by Document Actions. Read more about how to migrate on ${generateHelpUrl(\n      'experimental-actions-replaced-by-document-actions'\n    )}\".\n`)\n    hasWarned[schemaType.name] = true\n  }\n\n  return ACTIONS_FLAG in schemaType ? schemaType[ACTIONS_FLAG] : DEFAULT_ACTIONS\n}\n\nconst validateActions = (typeName: string, actions: string[]) => {\n  if (!Array.isArray(actions)) {\n    throw new Error(\n      `The value of <type>.${ACTIONS_FLAG} should be an array with any of the actions ${VALID_ACTIONS.join(\n        ', '\n      )}`\n    )\n  }\n\n  const invalid = difference(actions, VALID_ACTIONS)\n\n  if (invalid.length > 0) {\n    throw new Error(\n      `Invalid action${\n        invalid.length > 1 ? 's' : ''\n      } configured for schema type \"${typeName}\": ${invalid.join(\n        ', '\n      )}. Valid actions are: ${VALID_ACTIONS.join(', ')}`\n    )\n  }\n\n  return actions\n}\n\nexport const resolveEnabledActions = (schemaType: SchemaType): string[] =>\n  validateActions(schemaType.name, readActions(schemaType))\n\nexport const isActionEnabled = (schemaType: SchemaType, action: string): boolean =>\n  resolveEnabledActions(schemaType).includes(action)\n"],"names":["flatten","get","__spreadArray","__read","uniq","inspect","isPlainObject","__assign","__rest","normalizeToProp","getOptionErrors","quote","humanizeList","omit","humanize","leven","block","difference"],"mappings":"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"}