"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledGrid = void 0;
exports.focusRingStyle = focusRingStyle;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function focusRingBorderStyle(border) {
  return "inset 0 0 0 ".concat(border.width, "px ").concat(border.color);
}

function focusRingStyle(opts) {
  var base = opts.base,
      border = opts.border,
      focusRing = opts.focusRing;
  var focusRingOutsetWidth = focusRing.offset + focusRing.width;
  var focusRingInsetWidth = 0 - focusRing.offset;
  var bgColor = base ? base.bg : 'var(--card-bg-color)';
  return [focusRingInsetWidth > 0 && "inset 0 0 0 ".concat(focusRingInsetWidth, "px var(--card-focus-ring-color)"), border && focusRingBorderStyle(border), focusRingInsetWidth < 0 && "0 0 0 ".concat(0 - focusRingInsetWidth, "px ").concat(bgColor), focusRingOutsetWidth > 0 && "0 0 0 ".concat(focusRingOutsetWidth, "px var(--card-focus-ring-color)")].filter(Boolean).join(',');
}

var StyledGrid = (0, _styledComponents.default)(_ui.Grid)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  align-items: flex-end;\n"])));
exports.StyledGrid = StyledGrid;