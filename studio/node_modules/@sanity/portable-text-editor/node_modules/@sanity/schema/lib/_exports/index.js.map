{"version":3,"file":"index.js","sources":["../../src/legacy/types/constants.ts","../../src/legacy/types/any.ts","../../src/legacy/preview/primitivePreview.ts","../../src/legacy/types/string.ts","../../src/legacy/types/text.ts","../../src/legacy/types/datetime.ts","../../src/legacy/types/date.ts","../../src/legacy/types/boolean.ts","../../src/legacy/types/url.ts","../../src/legacy/types/email.ts","../../src/legacy/types/number.ts","../../src/legacy/types/utils.ts","../../src/legacy/preview/JSONStringifyHuman.ts","../../src/legacy/preview/fallbackPrepare.ts","../../src/legacy/preview/portableText.ts","../../src/legacy/preview/guessPreviewConfig.ts","../../src/legacy/preview/deprecationUtils.ts","../../src/legacy/preview/createPreviewGetter.ts","../../src/legacy/ordering/guessOrderingConfig.ts","../../src/legacy/searchConfig/normalize.ts","../../src/legacy/searchConfig/resolve.ts","../../src/legacy/types/object.ts","../../src/legacy/types/reference.ts","../../src/legacy/types/crossDatasetReference.ts","../../src/legacy/types/image/fieldDefs.ts","../../src/legacy/types/image.ts","../../src/legacy/types/file.ts","../../src/legacy/types/document.ts","../../src/legacy/types/array.ts","../../src/legacy/types/blocks/defaults.ts","../../src/legacy/types/blocks/block.ts","../../src/legacy/types/blocks/span.ts","../../src/legacy/Schema.ts"],"sourcesContent":["export const DEFAULT_OVERRIDEABLE_FIELDS = [\n  'jsonType',\n  'type',\n  'name',\n  'title',\n  'description',\n  'options',\n  'fieldsets',\n  'validation',\n  'readOnly',\n  'hidden',\n  'components',\n  'diffComponent',\n  'initialValue',\n]\n","import {pick, omit} from 'lodash'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ANY_CORE = {\n  name: 'any',\n  type: null,\n  jsonType: 'any',\n}\n\nexport const AnyType = {\n  get() {\n    return ANY_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const parsed = Object.assign(pick(ANY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ANY_CORE,\n      of: subTypeDef.of.map((fieldDef) => {\n        return {\n          name: fieldDef.name,\n          type: extendMember(omit(fieldDef, 'name')),\n        }\n      }),\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export default {\n  prepare: (val) => ({title: String(val)}),\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst STRING_CORE = {\n  name: 'string',\n  title: 'String',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const StringType = {\n  get() {\n    return STRING_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(STRING_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: STRING_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS, 'rows']\n\nconst TEXT_CORE = {\n  name: 'text',\n  title: 'Text',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const TextType = {\n  get() {\n    return TEXT_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(TEXT_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: TEXT_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATETIME_CORE = {\n  name: 'datetime',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateTimeType = {\n  get() {\n    return DATETIME_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATETIME_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATETIME_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATE_CORE = {\n  name: 'date',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateType = {\n  get() {\n    return DATE_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATE_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst BOOLEAN_CORE = {\n  name: 'boolean',\n  title: 'Boolean',\n  type: null,\n  jsonType: 'boolean',\n}\n\nexport const BooleanType = {\n  get() {\n    return BOOLEAN_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(BOOLEAN_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: BOOLEAN_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst URL_CORE = {\n  name: 'url',\n  title: 'Url',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const UrlType = {\n  get() {\n    return URL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(URL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: URL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst EMAIL_CORE = {\n  name: 'email',\n  title: 'Email',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const EmailType = {\n  get() {\n    return EMAIL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(EMAIL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: EMAIL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst NUMBER_CORE = {\n  name: 'number',\n  title: 'Number',\n  type: null,\n  jsonType: 'number',\n}\n\nexport const NumberType = {\n  get() {\n    return NUMBER_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(NUMBER_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: NUMBER_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","interface Config {\n  enumerable?: boolean\n  writable?: boolean\n}\nexport function lazyGetter(target, key, getter, config: Config = {}) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    enumerable: config.enumerable !== false,\n    get() {\n      const val = getter()\n      Object.defineProperty(target, key, {\n        value: val,\n        writable: Boolean(config.writable),\n        configurable: false,\n      })\n      return val\n    },\n  })\n  return target\n}\n\n//\n// const o = lazyGetter({}, 'expensive', function() {\n//   console.log('doing expensive calculations')\n//   return 'RESULT OF EXPENSIVE'\n// })\n//\n// console.log(o.expensive)\n// console.log(o.expensive)\n// console.log(o.expensive)\n","import {pick} from 'lodash'\n\nfunction isEmpty(object) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction _stringify(value, options, depth) {\n  if (depth > options.maxDepth) {\n    return '...'\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[empty]'\n    }\n    const capLength = Math.max(value.length - options.maxBreadth)\n    const asString = value\n      .slice(0, options.maxBreadth)\n      .map((item, index) => _stringify(item, options, depth + 1))\n      .concat(capLength > 0 ? `…+${capLength}` : [])\n      .join(', ')\n\n    return depth === 0 ? asString : `[${asString}]`\n  }\n  if (typeof value === 'object' && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined'\n    )\n\n    if (isEmpty(pick(value, keys))) {\n      return '{empty}'\n    }\n\n    const asString = keys\n      .slice(0, options.maxBreadth)\n      .map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`)\n      .join(', ')\n\n    return depth === 0 ? asString : `{${asString}}`\n  }\n  const asString = String(value)\n  return asString === '' ? '\"\"' : asString\n}\n\nexport default function stringify(\n  value,\n  options: {maxDepth?: number; maxBreadth?: number; ignoreKeys?: string[]} = {}\n) {\n  const opts = {\n    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,\n    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,\n    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : [],\n  }\n  return _stringify(value, opts, 0)\n}\n","import {pick} from 'lodash'\nimport stringify from './JSONStringifyHuman'\n\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: ['_id', '_type', '_key', '_ref'],\n}\n\nexport function createFallbackPrepare(fieldNames) {\n  return (value) => ({\n    title: stringify(pick(value, fieldNames), OPTIONS),\n  })\n}\n","type FieldDef = {\n  type: string\n  name: string\n  of?: {type: string}[]\n}\n\nexport function isBlockField(field: FieldDef): boolean {\n  return field.type === 'array' && field.of && field.of.some((member) => member.type === 'block')\n}\n","import {omitBy, isUndefined} from 'lodash'\nimport arrify from 'arrify'\nimport {createFallbackPrepare} from './fallbackPrepare'\nimport {isBlockField} from './portableText'\n\nconst TITLE_CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption']\nconst DESCRIPTION_CANDIDATES = ['description', ...TITLE_CANDIDATES]\n\nfunction fieldHasReferenceTo(fieldDef, refType) {\n  return arrify(fieldDef.to || []).some((memberTypeDef) => memberTypeDef.type === refType)\n}\n\nfunction isImageAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.imageAsset')\n}\n\nfunction resolveImageAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const imageAssetField = fields.find(isImageAssetField)\n  if (imageAssetField) {\n    return imageAssetField.name\n  }\n  const fieldWithImageAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isImageAssetField)\n  )\n\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : undefined\n}\n\nfunction isFileAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.fileAsset')\n}\n\nfunction resolveFileAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const assetField = fields.find(isFileAssetField)\n  if (assetField) {\n    return assetField.name\n  }\n  const fieldWithFileAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isFileAssetField)\n  )\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : undefined\n}\n\nexport default function guessPreviewFields(rawObjectTypeDef) {\n  const objectTypeDef = {fields: [], ...rawObjectTypeDef}\n\n  const stringFieldNames = objectTypeDef.fields\n    .filter((field) => field.type === 'string')\n    .map((field) => field.name)\n\n  const blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field) => field.name)\n\n  // Check if we have fields with names that is listed in candidate fields\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)\n  )\n\n  let descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) =>\n      candidate !== titleField &&\n      (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate))\n  )\n\n  if (!titleField) {\n    // Pick first defined string field\n    titleField = stringFieldNames[0] || blockFieldNames[0]\n    // Pick next as desc\n    descField = stringFieldNames[1] || blockFieldNames[1]\n  }\n\n  const mediaField = objectTypeDef.fields.find((field) => field.type === 'image')\n\n  const imageAssetPath = resolveImageAssetPath(objectTypeDef)\n\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef)\n    if (fileAssetPath) {\n      titleField = `${fileAssetPath}.originalFilename`\n    }\n    if (imageAssetPath) {\n      titleField = `${imageAssetPath}.originalFilename`\n    }\n  }\n\n  if (!titleField && !imageAssetPath) {\n    // last resort, pick all fields and concat them\n    const fieldNames = objectTypeDef.fields.map((field) => field.name)\n    const fieldMapping = fieldNames.reduce((acc, fieldName) => {\n      acc[fieldName] = fieldName\n      return acc\n    }, {})\n\n    return {\n      select: fieldMapping,\n      prepare: createFallbackPrepare(fieldNames),\n    }\n  }\n\n  const select = omitBy(\n    {\n      title: titleField,\n      description: descField,\n      imageUrl: !mediaField && imageAssetPath ? `${imageAssetPath}.url` : undefined,\n      media: mediaField ? mediaField.name : undefined,\n    },\n    isUndefined\n  )\n\n  return {\n    select: select,\n  }\n}\n","export function warnIfPreviewOnOptions(type) {\n  if (type.options && type.options.preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`)\n  }\n}\n\nexport function warnIfPreviewHasFields(type) {\n  const preview = type.preview || (type.options || {}).preview\n  if (preview && 'fields' in preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`)\n  }\n}\n","import {pick} from 'lodash'\nimport guessPreviewConfig from './guessPreviewConfig'\nimport {warnIfPreviewOnOptions, warnIfPreviewHasFields} from './deprecationUtils'\n\nfunction parseSelection(selection) {\n  return selection.reduce((acc, field) => {\n    acc[field] = field\n    return acc\n  }, {})\n}\n\nfunction parsePreview(preview) {\n  if (!preview) {\n    return preview\n  }\n  const select = preview.select || preview.fields || {}\n  if (Array.isArray(select)) {\n    return {\n      ...pick(preview, ['prepare', 'component']),\n      select: parseSelection(select),\n    }\n  }\n  return {\n    ...pick(preview, ['prepare', 'component']),\n    select,\n  }\n}\n\nexport default function createPreviewGetter(objectTypeDef) {\n  return function previewGetter() {\n    warnIfPreviewOnOptions(objectTypeDef)\n    warnIfPreviewHasFields(objectTypeDef)\n    const preview = parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview)\n    return preview || guessPreviewConfig(objectTypeDef)\n  }\n}\n","import {capitalize, startCase} from 'lodash'\n\nconst CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption', 'description']\n\nconst PRIMITIVES = ['string', 'boolean', 'number']\n\nconst isPrimitive = (field) => PRIMITIVES.includes(field.type)\n\nexport default function guessOrderingConfig(objectTypeDef) {\n  let candidates = CANDIDATES.filter((candidate) =>\n    objectTypeDef.fields.some((field) => isPrimitive(field) && field.name === candidate)\n  )\n\n  // None of the candidates were found, fallback to all fields\n  if (candidates.length === 0) {\n    candidates = objectTypeDef.fields.filter(isPrimitive).map((field) => field.name)\n  }\n\n  return candidates.map((name) => ({\n    name: name,\n    title: capitalize(startCase(name)),\n    by: [{field: name, direction: 'asc'}],\n  }))\n}\n","import {isPlainObject, toPath} from 'lodash'\n\nexport function normalizeSearchConfigs(configs) {\n  if (!Array.isArray(configs)) {\n    throw new Error(\n      'The search config of a document type must be an array of search config objects'\n    )\n  }\n  return configs.map((conf) => {\n    if (conf === 'defaults') {\n      return conf\n    }\n    if (!isPlainObject(conf)) {\n      throw new Error('Search config must be an object of {path: string, weight: number}')\n    }\n    return {\n      weight: 'weight' in conf ? conf.weight : 1,\n      path: toPath(conf.path),\n      mapWith: typeof conf.mapWith === 'string' ? conf.mapWith : undefined,\n    }\n  })\n}\n","import {uniqBy} from 'lodash'\n\nconst stringFieldsSymbol = Symbol('__cachedStringFields')\n\nconst isReference = (type) => type.type && type.type.name === 'reference'\n\nconst portableTextFields = ['style', 'list']\nconst isPortableTextBlock = (type) =>\n  type.name === 'block' || (type.type && isPortableTextBlock(type.type))\nconst isPortableTextArray = (type) =>\n  type.jsonType === 'array' && Array.isArray(type.of) && type.of.some(isPortableTextBlock)\n\nfunction reduceType(type, reducer, acc, path = [], maxDepth) {\n  if (maxDepth < 0) {\n    return acc\n  }\n\n  const accumulator = reducer(acc, type, path)\n  if (type.jsonType === 'array' && Array.isArray(type.of)) {\n    return reduceArray(type, reducer, accumulator, path, maxDepth)\n  }\n\n  if (type.jsonType === 'object' && Array.isArray(type.fields) && !isReference(type)) {\n    return reduceObject(type, reducer, accumulator, path, maxDepth)\n  }\n\n  return accumulator\n}\n\nfunction reduceArray(arrayType, reducer, accumulator, path, maxDepth) {\n  return arrayType.of.reduce(\n    (acc, ofType) => reduceType(ofType, reducer, acc, path, maxDepth - 1),\n    accumulator\n  )\n}\n\nfunction reduceObject(objectType, reducer, accumulator, path, maxDepth) {\n  const isPtBlock = isPortableTextBlock(objectType)\n  return objectType.fields.reduce((acc, field) => {\n    // Don't include styles and list types as searchable paths for portable text blocks\n    if (isPtBlock && portableTextFields.includes(field.name)) {\n      return acc\n    }\n\n    const segment = [field.name].concat(field.type.jsonType === 'array' ? [[]] : [])\n    return reduceType(field.type, reducer, acc, path.concat(segment), maxDepth - 1)\n  }, accumulator)\n}\n\nconst BASE_WEIGHTS = [\n  {weight: 1, path: ['_id']},\n  {weight: 1, path: ['_type']},\n]\n\nconst PREVIEW_FIELD_WEIGHT_MAP = {\n  title: 10,\n  subtitle: 5,\n  description: 1.5,\n}\n\nfunction deriveFromPreview(type) {\n  const select = type.preview.select\n  return Object.keys(select)\n    .filter((fieldName) => fieldName in PREVIEW_FIELD_WEIGHT_MAP)\n    .map((fieldName) => ({\n      weight: PREVIEW_FIELD_WEIGHT_MAP[fieldName],\n      path: select[fieldName].split('.'),\n    }))\n}\n\nfunction getCachedStringFieldPaths(type, maxDepth) {\n  if (!type[stringFieldsSymbol]) {\n    type[stringFieldsSymbol] = uniqBy(\n      [\n        ...BASE_WEIGHTS,\n        ...deriveFromPreview(type),\n        ...getStringFieldPaths(type, maxDepth).map((path) => ({weight: 1, path})),\n        ...getPortableTextFieldPaths(type, maxDepth).map((path) => ({\n          weight: 1,\n          path,\n          mapWith: 'pt::text',\n        })),\n      ],\n      (spec) => spec.path.join('.')\n    )\n  }\n  return type[stringFieldsSymbol]\n}\n\nfunction getStringFieldPaths(type, maxDepth) {\n  const reducer = (accumulator, childType, path) =>\n    childType.jsonType === 'string' ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nfunction getPortableTextFieldPaths(type, maxDepth) {\n  const reducer = (accumulator, childType, path) =>\n    isPortableTextArray(childType) ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nexport default function resolveSearchConfig(type) {\n  return getCachedStringFieldPaths(type, 4)\n}\n","import {castArray, flatMap, keyBy, pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport guessOrderingConfig from '../ordering/guessOrderingConfig'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport resolveSearchConfig from '../searchConfig/resolve'\nimport {lazyGetter} from './utils'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  'orderings',\n  '__experimental_search',\n  'blockEditor',\n  'icon',\n]\n\nexport const ObjectType = {\n  get() {\n    return {\n      name: 'object',\n      title: 'Object',\n      type: null,\n      jsonType: 'object',\n    }\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const subTypeDef = {fields: [], ...rawSubTypeDef}\n\n    const options = {...(subTypeDef.options || {})}\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: this.get(),\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, group, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          group,\n          fieldset,\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'groups', () => {\n      return createFieldsGroups(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      '__experimental_search',\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search\n          ? normalizeSearchConfigs(subTypeDef.__experimental_search)\n          : null\n\n        if (userProvidedSearchConfig) {\n          return userProvidedSearchConfig.map((entry) =>\n            entry === 'defaults' ? normalizeSearchConfigs(subTypeDef) : entry\n          )\n        }\n        return resolveSearchConfig(parsed)\n      },\n      {\n        enumerable: false,\n      }\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"object\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            title:\n              extensionDef.title ||\n              subTypeDef.title ||\n              (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n            type: parent,\n          })\n          lazyGetter(current, '__experimental_search', () => parent.__experimental_search)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nexport function createFieldsets(typeDef, fields) {\n  const fieldsetsDef = typeDef.fieldsets || []\n  const fieldsets = fieldsetsDef.map((fieldset) => {\n    const {name, title, description, options, group, hidden, readOnly} = fieldset\n    return {\n      name,\n      title,\n      description,\n      options,\n      group,\n      fields: [],\n      hidden,\n      readOnly,\n    }\n  })\n\n  const fieldsetsByName = keyBy(fieldsets, 'name')\n\n  return fields\n    .map((field) => {\n      if (field.fieldset) {\n        const fieldset = fieldsetsByName[field.fieldset]\n        if (!fieldset) {\n          throw new Error(\n            `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`\n          )\n        }\n        fieldset.fields.push(field)\n        // Return the fieldset if its the first time we encounter a field in this fieldset\n        return fieldset.fields.length === 1 ? fieldset : null\n      }\n      return {single: true, field}\n    })\n    .filter(Boolean)\n}\n\nfunction createFieldsGroups(typeDef, fields) {\n  const groupsDef = typeDef.groups || []\n  const groups = groupsDef.map((group) => {\n    const {name, title, description, icon, readOnly, hidden} = group\n    return {\n      name,\n      title,\n      description,\n      icon,\n      readOnly,\n      default: group.default,\n      hidden,\n      fields: [],\n    }\n  })\n\n  const defaultGroups = groups.filter((group) => group.default)\n\n  if (defaultGroups.length > 1) {\n    // Throw if you have multiple default field groups defined\n    throw new Error(\n      `You currently have ${defaultGroups.length} default field groups defined for type '${\n        typeDef.name ? startCase(typeDef.name) : typeDef.title ?? ``\n      }', but only 1 is supported`\n    )\n  }\n\n  const groupsByName = keyBy(groups, 'name')\n\n  fields.forEach((field) => {\n    if (field.group) {\n      const fieldGroupNames = castArray(field.group)\n\n      if (fieldGroupNames.length > 0) {\n        fieldGroupNames.forEach((fieldGroupName) => {\n          const currentGroup = groupsByName[fieldGroupName]\n\n          if (!currentGroup) {\n            throw new Error(\n              `Field group '${fieldGroupName}' is not defined in schema for type '${\n                typeDef.name ?? typeDef.title ?? ``\n              }'`\n            )\n          }\n\n          currentGroup.fields.push(field)\n        })\n      }\n    }\n  })\n\n  return flatMap(groupsByName).filter((group) => group.fields.length > 0)\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst REFERENCE_CORE = {\n  name: 'reference',\n  title: 'Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Reference'\n  }\n  return `Reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title),\n    'or'\n  ).toLowerCase()}`\n}\n\nexport const ReferenceType = {\n  get() {\n    return REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`\n      )\n    }\n    const parsed = Object.assign(pick(REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: REFERENCE_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => createMemberType(toType))\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {capitalize, pick} from 'lodash'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference marker',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst CROSS_DATASET_REFERENCE_CORE = {\n  name: 'crossDatasetReference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Cross dataset Reference'\n  }\n  return `Cross dataset reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title || capitalize(toType.type)),\n    'or'\n  ).toLowerCase()}`\n}\n\nexport const CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`\n      )\n    }\n    const parsed = Object.assign(\n      pick(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE,\n      }\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => {\n        return {\n          ...toType,\n          // eslint-disable-next-line camelcase\n          __experimental_search: normalizeSearchConfigs(toType.__experimental_search),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: [{type: 'sanity.imageAsset'}],\n}\n\nexport const HOTSPOT_FIELD = {\n  name: 'hotspot',\n  type: 'sanity.imageHotspot',\n}\n\nexport const CROP_FIELD = {\n  name: 'crop',\n  type: 'sanity.imageCrop',\n}\n","import {pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {ASSET_FIELD, HOTSPOT_FIELD, CROP_FIELD} from './image/fieldDefs'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst IMAGE_CORE = {\n  name: 'image',\n  title: 'Image',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const ImageType = {\n  get() {\n    return IMAGE_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD]\n    if (!options.hotspot) {\n      hotspotFields = hotspotFields.map((field) => ({...field, hidden: true}))\n    }\n\n    const fields = [ASSET_FIELD, ...hotspotFields, ...(subTypeDef.fields || [])]\n\n    const parsed = Object.assign(pick(IMAGE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || startCase(subTypeDef.name || subTypeDef.type || ''),\n      options: options,\n      isCustomized: Boolean(subTypeDef.fields),\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, fieldset, ...type} = fieldDef\n        return {\n          name: name,\n          fieldset,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"image\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: {type: 'sanity.fileAsset'},\n}\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst FILE_CORE = {\n  name: 'file',\n  title: 'File',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {\n  accept: '',\n}\n\nexport const FileType = {\n  get() {\n    return FILE_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const fields = [ASSET_FIELD, ...(subTypeDef.fields || [])]\n\n    const parsed = Object.assign(pick(FILE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: FILE_CORE,\n      options: options,\n      isCustomized: Boolean(subTypeDef.fields),\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, fieldset, ...type} = fieldDef\n        return {\n          name: name,\n          fieldset,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"file\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {ObjectType} from './object'\n\nconst DOCUMENT_CORE = {\n  name: 'document',\n  title: 'Document',\n  type: null,\n  jsonType: 'object',\n}\n\nexport const DocumentType = {\n  get() {\n    return DOCUMENT_CORE\n  },\n  extend: ObjectType.extend,\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ARRAY_CORE = {\n  name: 'array',\n  type: null,\n  jsonType: 'array',\n  of: [],\n}\n\nexport const ArrayType = {\n  get() {\n    return ARRAY_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    const parsed = Object.assign(pick(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ARRAY_CORE,\n    })\n    lazyGetter(parsed, 'of', () => {\n      return subTypeDef.of.map((ofTypeDef) => {\n        return createMemberType(ofTypeDef)\n      })\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const DEFAULT_LINK_ANNOTATION = {\n  type: 'object',\n  name: 'link',\n  options: {\n    modal: {type: 'popover'},\n  },\n  fields: [\n    {\n      name: 'href',\n      type: 'url',\n      title: 'Url',\n      validation: (Rule) =>\n        Rule.uri({\n          scheme: ['http', 'https', 'tel', 'mailto'],\n          allowRelative: true,\n        }),\n    },\n  ],\n}\n\nexport const DEFAULT_TEXT_FIELD = {\n  type: 'text',\n  name: 'text',\n  title: 'Text',\n}\n\nexport const DEFAULT_MARKS_FIELD = {\n  name: 'marks',\n  type: 'array',\n  of: [{type: 'string'}],\n  title: 'Marks',\n}\n\nexport const LIST_TYPES = {\n  bullet: {title: 'Bullet', value: 'bullet'},\n  numbered: {title: 'Numbered', value: 'number'},\n}\n\nexport const DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered]\n\nexport const BLOCK_STYLES = {\n  normal: {title: 'Normal', value: 'normal'},\n  h1: {title: 'Heading 1', value: 'h1'},\n  h2: {title: 'Heading 2', value: 'h2'},\n  h3: {title: 'Heading 3', value: 'h3'},\n  h4: {title: 'Heading 4', value: 'h4'},\n  h5: {title: 'Heading 5', value: 'h5'},\n  h6: {title: 'Heading 6', value: 'h6'},\n  blockquote: {title: 'Quote', value: 'blockquote'},\n}\n\nexport const DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote,\n]\n\nexport const DECORATOR_STRONG = {title: 'Strong', value: 'strong'}\nexport const DECORATOR_EMPHASIS = {title: 'Emphasis', value: 'em'}\nexport const DECORATOR_CODE = {title: 'Code', value: 'code'}\nexport const DECORATOR_UNDERLINE = {title: 'Underline', value: 'underline'}\nexport const DECORATOR_STRIKE = {title: 'Strike', value: 'strike-through'}\n\nexport const DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE,\n}\n\nexport const DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough,\n]\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nimport {\n  BLOCK_STYLES,\n  DEFAULT_BLOCK_STYLES,\n  DEFAULT_LINK_ANNOTATION,\n  DEFAULT_LIST_TYPES,\n  DEFAULT_MARKS_FIELD,\n  DEFAULT_TEXT_FIELD,\n  DEFAULT_DECORATORS,\n} from './defaults'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst BLOCK_CORE = {\n  name: 'block',\n  title: 'Block',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const BlockType = {\n  get() {\n    return BLOCK_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {marks, styles, lists, of, ...rest} = subTypeDef\n\n    const childrenField = createChildrenField(marks, of)\n    const styleField = createStyleField(styles)\n    const listField = createListField(lists)\n\n    const markDefsField = {\n      name: 'markDefs',\n      title: 'Mark definitions',\n      type: 'array',\n      of: marks?.annotations || DEFAULT_ANNOTATIONS,\n    }\n\n    // NOTE: if you update this (EVEN THE ORDER OF FIELDS) you _NEED TO_ also\n    // update `BlockSchemaType`, `isBlockSchemaType` and similar in `@sanity/types`\n    const fields = [childrenField, styleField, listField, markDefsField].concat(\n      subTypeDef.fields || []\n    )\n\n    const parsed = Object.assign(pick(BLOCK_CORE, INHERITED_FIELDS), rest, {\n      type: BLOCK_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"block\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nfunction ensureNormalStyle(styles) {\n  return styles.some((style) => style.value === 'normal')\n    ? styles\n    : [BLOCK_STYLES.normal, ...styles]\n}\n\nfunction createStyleField(styles) {\n  return {\n    name: 'style',\n    title: 'Style',\n    type: 'string',\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES),\n    },\n  }\n}\n\nfunction createListField(lists) {\n  return {\n    name: 'list',\n    title: 'List type',\n    type: 'string',\n    options: {\n      list: lists || DEFAULT_LIST_TYPES,\n    },\n  }\n}\n\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION]\n\nfunction createChildrenField(marks, of = []) {\n  return {\n    name: 'children',\n    title: 'Content',\n    type: 'array',\n    of: [\n      {\n        type: 'span',\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS,\n      },\n      ...of.filter((memberType) => memberType.type !== 'span'),\n    ],\n  }\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst SPAN_CORE = {\n  name: 'span',\n  title: 'Span',\n  type: null,\n  jsonType: 'object',\n}\n\nconst MARKS_FIELD = {\n  name: 'marks',\n  title: 'Marks',\n  type: 'array',\n  of: [{type: 'string'}],\n}\n\nconst TEXT_FIELD = {\n  name: 'text',\n  title: 'Text',\n  type: 'string',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const SpanType = {\n  get() {\n    return SPAN_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {annotations = [], marks = []} = subTypeDef\n\n    // NOTE: if you update this please also update `SpanSchemaType` in`@sanity/types`\n    const fields = [MARKS_FIELD, TEXT_FIELD]\n\n    const parsed = Object.assign(pick(SPAN_CORE, INHERITED_FIELDS), subTypeDef, {\n      type: SPAN_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'annotations', () => annotations.map(extendMember))\n    lazyGetter(parsed, 'marks', () => marks.map(extendMember))\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"span\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import * as types from './types'\n\nfunction compileRegistry(schemaDef) {\n  const registry = Object.assign(Object.create(null), types)\n\n  const defsByName = schemaDef.types.reduce((acc, def) => {\n    if (acc[def.name]) {\n      throw new Error(`Duplicate type name added to schema: ${def.name}`)\n    }\n    acc[def.name] = def\n    return acc\n  }, {})\n\n  schemaDef.types.forEach(add)\n\n  return registry\n\n  function ensure(typeName) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName]) {\n        throw new Error(`Unknown type: ${typeName}`)\n      }\n      add(defsByName[typeName])\n    }\n  }\n\n  function extendMember(memberDef) {\n    ensure(memberDef.type)\n    return registry[memberDef.type].extend(memberDef, extendMember).get()\n  }\n\n  function add(typeDef) {\n    ensure(typeDef.type)\n    if (registry[typeDef.name]) {\n      return\n    }\n    registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember)\n  }\n}\n\n/**\n * @beta\n */\nexport default class Schema {\n  _original: {name: string; types: any[]}\n  _registry: {[typeName: string]: any}\n\n  static compile(schemaDef: any): Schema {\n    return new Schema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    this._original = schemaDef\n    this._registry = compileRegistry(schemaDef)\n  }\n\n  get name(): string {\n    return this._original.name\n  }\n\n  get(name: string): any {\n    return this._registry[name] && this._registry[name].get()\n  }\n\n  has(name: string): boolean {\n    return name in this._registry\n  }\n\n  getTypeNames(): string[] {\n    return Object.keys(this._registry)\n  }\n}\n"],"names":["OVERRIDABLE_FIELDS","guessPreviewConfig","REF_FIELD","WEAK_FIELD","REFERENCE_FIELDS","humanize","buildTitle","ASSET_FIELD","DEFAULT_OPTIONS","INHERITED_FIELDS"],"mappings":"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"}