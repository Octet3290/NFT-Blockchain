import { Observable } from 'rxjs';
import { ReconnectEvent, WelcomeEvent, MutationEvent } from './types';
declare type Params = Record<string, string | number | boolean | string[]>;
export interface ListenQueryOptions {
    tag?: string;
    apiVersion?: string;
    throttleTime?: number;
    transitions?: ('update' | 'appear' | 'disappear')[];
}
declare const fetch: (query: string, params: Params, options: ListenQueryOptions) => Observable<any>;
declare const listen: (query: string, params: Params, options: ListenQueryOptions) => Observable<WelcomeEvent | MutationEvent | ReconnectEvent>;
export declare const listenQuery: (query: string | {
    fetch: string;
    listen: string;
}, params?: Params, options?: ListenQueryOptions) => Observable<any>;
export {};
//# sourceMappingURL=listenQuery.d.ts.map