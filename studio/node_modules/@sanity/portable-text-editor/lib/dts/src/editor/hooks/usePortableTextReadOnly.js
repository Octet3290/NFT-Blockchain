import { createContext, useContext } from 'react';
/**
 * A React context for sharing the editor's readOnly status.
 */
export var PortableTextEditorReadOnlyContext = createContext(false);
/**
 * Get the current editor selection from the React context.
 */
export var usePortableTextEditorReadOnlyStatus = function () {
    var readOnly = useContext(PortableTextEditorReadOnlyContext);
    if (readOnly === undefined) {
        throw new Error("The `usePortableTextEditorReadOnly` hook must be used inside the <PortableTextEditor> component's context.");
    }
    return readOnly;
};
//# sourceMappingURL=usePortableTextReadOnly.js.map