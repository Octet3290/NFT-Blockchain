{"version":3,"file":"index.js","sources":["../src/helpers.ts","../src/reference/asserters.ts","../src/assets/asserters.ts","../src/crossDatasetReference/asserters.ts","../src/documents/asserters.ts","../src/markers/asserters.ts","../src/mutations/asserters.ts","../../../../node_modules/tslib/tslib.es6.js","../src/paths/asserters.ts","../src/portableText/asserters.ts","../src/schema/types.ts","../src/schema/asserters.ts","../src/transactionLog/asserters.ts","../src/validation/asserters.ts"],"sourcesContent":["export function isObject(obj: unknown): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n","import {isObject} from '../helpers'\nimport type {Reference} from './types'\n\nexport function isReference(reference: unknown): reference is Reference {\n  return isObject(reference) && typeof reference._ref === 'string'\n}\n","import {isObject} from '../helpers'\nimport {isReference} from '../reference'\nimport type {Image} from './types'\n\nexport function isImage(value: unknown): value is Image {\n  return isObject(value) && isReference(value.asset) && value.asset._ref.startsWith('image-')\n}\n","import {isObject} from '../helpers'\nimport type {CrossDatasetReference} from './types'\n\nexport function isCrossDatasetReference(reference: unknown): reference is CrossDatasetReference {\n  return (\n    isObject(reference) &&\n    typeof reference._ref === 'string' &&\n    typeof reference._dataset === 'string' &&\n    typeof reference._projectId === 'string'\n  )\n}\n","import {isObject} from '../helpers'\nimport type {KeyedObject, SanityDocument, TypedObject} from './types'\n\nexport function isSanityDocument(document: unknown): document is SanityDocument {\n  return (\n    isObject(document) && typeof document._id === 'string' && typeof document._type === 'string'\n  )\n}\n\nexport function isTypedObject(obj: unknown): obj is TypedObject {\n  return isObject(obj) && typeof obj._type === 'string'\n}\n\nexport function isKeyedObject(obj: unknown): obj is KeyedObject {\n  return isObject(obj) && typeof obj._key === 'string'\n}\n","import type {ValidationMarker} from './types'\n\nexport function isValidationErrorMarker(\n  marker: ValidationMarker\n): marker is ValidationMarker & {level: 'error'} {\n  return marker.level === 'error'\n}\n\nexport function isValidationWarningMarker(\n  marker: ValidationMarker\n): marker is ValidationMarker & {level: 'warning'} {\n  return marker.level === 'warning'\n}\n\nexport function isValidationInfoMarker(\n  marker: ValidationMarker\n): marker is ValidationMarker & {level: 'info'} {\n  return marker.level === 'info'\n}\n","import type {TransactionLogMutation} from '../transactionLog'\nimport type {\n  CreateIfNotExistsMutation,\n  CreateMutation,\n  CreateOrReplaceMutation,\n  DeleteMutation,\n  Mutation,\n  PatchMutation,\n} from './types'\n\nexport function isCreateMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is CreateMutation {\n  return 'create' in mutation\n}\n\nexport function isCreateIfNotExistsMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is CreateIfNotExistsMutation {\n  return 'createIfNotExists' in mutation\n}\n\nexport function isCreateOrReplaceMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is CreateOrReplaceMutation {\n  return 'createOrReplace' in mutation\n}\n\nexport function isDeleteMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is DeleteMutation {\n  return 'delete' in mutation\n}\n\nexport function isPatchMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is PatchMutation {\n  return 'patch' in mutation\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import type {PathSegment, KeyedSegment, IndexTuple} from './types'\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n","import type {Block, Span} from './types'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return !!value && (typeof value == 'object' || typeof value == 'function')\n}\n\nexport function isBlock<T = Span>(value: unknown): value is Block<T> {\n  return (\n    isRecord(value) &&\n    typeof value._type === 'string' && // block types can be named, so expect anything here.\n    typeof value.style === 'string' &&\n    Array.isArray(value.children) &&\n    Array.isArray(value.markDefs)\n  )\n}\n\nexport function isSpan(value: unknown): value is Span {\n  return (\n    isRecord(value) &&\n    value._type === 'span' &&\n    typeof value.text === 'string' &&\n    Array.isArray(value.marks)\n  )\n}\n","// Note: INCOMPLETE, but it's a start\nimport type {ComponentType} from 'react'\nimport {SanityClient} from '@sanity/client'\nimport type {Rule} from '../validation'\nimport type {ReferenceOptions} from '../reference'\nimport type {AssetSource} from '../assets'\nimport type {SlugOptions} from '../slug'\nimport type {SanityDocument} from '../documents'\nimport type {CurrentUser} from '../user'\nimport type {PreviewConfig} from './preview'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Schema {\n  /**\n   * The type definitions that are built into the sanity schema\n   */\n  export type IntrinsicTypeDefinition =\n    | ArrayDefinition\n    | BlockDefinition\n    | BooleanDefinition\n    | DateDefinition\n    | DatetimeDefinition\n    | DocumentDefinition\n    | FileDefinition\n    | GeopointDefinition\n    | ImageDefinition\n    | NumberDefinition\n    | ObjectDefinition\n    | ReferenceDefinition\n    | CrossDatasetReferenceDefinition\n    | SlugDefinition\n    | StringDefinition\n    | SpanDefinition\n    | TextDefinition\n    | UrlDefinition\n\n  /**\n   * Represents a Sanity schema type definition.\n   *\n   * It's recommend to use the `defineType` helper instead of this type by\n   * itself.\n   */\n  export type TypeDefinition<TType extends Type = Type> =\n    | Extract<IntrinsicTypeDefinition, {type: TType}>\n    | TypeAliasDefinition<TType>\n\n  /**\n   * A union of all intrinsic types allowed natively in the schema.\n   */\n  export type Type = IntrinsicTypeDefinition['type']\n\n  /**\n   * Represents a reference to another type registered top-level in your schema.\n   */\n  export interface TypeReference<TType extends Type = Type> {\n    type: string\n    name?: string\n    options?: TypeOptions<TType> & {[key: string]: unknown}\n  }\n\n  /**\n   * Represents a type definition that is an alias/extension of an existing type\n   * in your schema. Creating a type alias will re-register that existing type\n   * under a different name. You can also override the default type options with\n   * a type alias definition.\n   */\n  export interface TypeAliasDefinition<TType extends Type = Type> extends BaseDefinitionOptions {\n    type: Exclude<string, Type>\n    options?: TypeOptions<TType> & {[key: string]: unknown}\n  }\n\n  /**\n   * The shape of a field definition. Note, it's recommended to use the\n   * `defineField` function instead of using this type directly.\n   *\n   * A field definition can be a reference to another registered top-level type\n   * or a inline inline type definition.\n   */\n  export type FieldDefinition<TType extends Type = Type> = (\n    | Extract<IntrinsicTypeDefinition, {type: TType}>\n    | TypeReference<TType>\n  ) & {\n    name: string\n    title?: string\n    description?: string\n    fieldset?: string\n    group?: string | string[]\n    hidden?: ConditionalProperty\n    readOnly?: ConditionalProperty\n    validation?: SchemaValidationValue\n  }\n\n  export type ImageMetadataType = 'blurhash' | 'lqip' | 'palette' | 'exif' | 'location'\n\n  export type FieldsetDefinition = {\n    name: string\n    title?: string\n    description?: string\n    hidden?: ConditionalProperty\n    readOnly?: ConditionalProperty\n    options?: ObjectOptions\n  }\n\n  export type FieldGroupDefinition = {\n    name: string\n    title?: string\n    icon?: React.ComponentType | React.ReactNode\n    default?: boolean\n  }\n\n  interface BaseDefinitionOptions {\n    name: string\n    title?: string\n    description?: string\n    hidden?: ConditionalProperty\n    readOnly?: ConditionalProperty\n    validation?: SchemaValidationValue\n    icon?: React.ComponentType | React.ReactNode\n    components?: {\n      diff?: React.ComponentType<any> // @todo: use `DiffProps` here\n      field?: React.ComponentType<any> // @todo: use `FieldProps` here\n      input?: React.ComponentType<any> // @todo: use `InputProps` here\n      item?: React.ComponentType<any> // @todo: use `ItemProps` here\n      preview?: React.ComponentType<any> // @todo: use `PreviewProps` here\n    }\n    // TODO\n    initialValue?: InitialValueProperty<any, any>\n  }\n\n  export type TypeOptions<T extends Type> = T extends 'array'\n    ? ArrayOptions\n    : T extends 'block'\n    ? BlockOptions\n    : T extends 'boolean'\n    ? BooleanOptions\n    : T extends 'date'\n    ? DateOptions\n    : T extends 'datetime'\n    ? DatetimeOptions\n    : T extends 'file'\n    ? FileOptions\n    : T extends 'image'\n    ? ImageOptions\n    : T extends 'number'\n    ? NumberOptions\n    : T extends 'object'\n    ? ObjectOptions\n    : T extends 'reference'\n    ? ReferenceOptions\n    : T extends 'crossDatasetReference'\n    ? CrossDatasetReferenceDefinition\n    : T extends 'slug'\n    ? SlugOptions\n    : T extends 'string'\n    ? StringOptions\n    : never\n\n  export interface ArrayOptions<TValue = unknown> {\n    sortable?: boolean\n    layout?: 'tags' | 'grid'\n    list?: Array<{title: string; value: TValue} | string>\n    modal?: {type?: 'dialog' | 'popover'; width?: number | 'auto'}\n  }\n\n  export interface ArrayDefinition<TValue = unknown> extends BaseDefinitionOptions {\n    type: 'array'\n    of: Array<TypeDefinition | TypeReference>\n\n    options?: ArrayOptions<TValue>\n  }\n\n  export interface BlockOptions {\n    spellCheck?: boolean\n  }\n\n  export interface BlockDefinition extends BaseDefinitionOptions {\n    type: 'block'\n    styles?: Array<{title: string; value: string}>\n    lists?: Array<{title: string; value: string}>\n    // TODO\n    marks?: unknown\n    of?: Array<TypeDefinition | TypeReference>\n    options?: BlockOptions\n  }\n\n  export interface BooleanOptions {\n    layout?: 'switch' | 'checkbox'\n  }\n\n  export interface BooleanDefinition extends BaseDefinitionOptions {\n    type: 'boolean'\n    options?: BooleanOptions\n  }\n\n  export interface DateOptions {\n    calendarTodayLabel?: string\n    dateFormat?: string\n  }\n\n  export interface DateDefinition extends BaseDefinitionOptions {\n    type: 'date'\n    options?: DateOptions\n    placeholder?: string\n  }\n\n  export interface DatetimeOptions {\n    calendarTodayLabel?: string\n    dateFormat?: string\n    timeFormat?: string\n    timeStep?: number\n  }\n\n  export interface DatetimeDefinition extends BaseDefinitionOptions {\n    type: 'datetime'\n    options?: DatetimeOptions\n    placeholder?: string\n  }\n\n  export interface DocumentDefinition extends Omit<ObjectDefinition, 'type'> {\n    type: 'document'\n    liveEdit?: boolean\n    orderings?: SortOrdering[]\n  }\n\n  export interface FileOptions extends ObjectOptions {\n    storeOriginalFilename?: boolean\n    accept?: string\n    sources?: AssetSource[]\n  }\n\n  export interface FileDefinition extends Omit<ObjectDefinition, 'type' | 'fields' | 'options'> {\n    type: 'file'\n    fields?: ObjectDefinition['fields']\n    options?: FileOptions\n  }\n\n  export interface GeopointDefinition extends BaseDefinitionOptions {\n    type: 'geopoint'\n  }\n\n  interface AssetFieldOptions {\n    /**\n     * @deprecated This is now the default behavior - use `fieldset` to hide fields by default\n     */\n    isHighlighted?: boolean\n  }\n\n  export type AssetFieldDefinition<TType extends Type = Type> = FieldDefinition<TType> & {\n    options?: AssetFieldOptions\n  }\n\n  export interface ImageOptions extends FileOptions {\n    metadata?: ImageMetadataType[]\n    hotspot?: boolean\n  }\n\n  export interface ImageDefinition extends Omit<ObjectDefinition, 'type' | 'fields' | 'options'> {\n    type: 'image'\n    fields?: AssetFieldDefinition[]\n    metadata?: ImageMetadataType[]\n    hotspot?: boolean\n    options?: ImageOptions\n  }\n\n  export interface NumberOptions {\n    list?: Array<number | {title: string; value: number}>\n    layout?: 'radio' | 'dropdown'\n    direction?: 'horizontal' | 'vertical'\n  }\n\n  export interface NumberDefinition extends BaseDefinitionOptions {\n    type: 'number'\n    options?: NumberOptions\n  }\n\n  export interface ObjectOptions {\n    collapsible?: boolean\n    collapsed?: boolean\n    columns?: number\n    modal?: {\n      type?: 'dialog' | 'popover'\n      width?: number | number[] | 'auto'\n    }\n  }\n\n  export interface ObjectDefinition extends BaseDefinitionOptions {\n    type: 'object'\n    fields: FieldDefinition[]\n    groups?: FieldGroupDefinition[]\n    fieldsets?: FieldsetDefinition[]\n    preview?: PreviewConfig\n\n    options?: ObjectOptions\n  }\n\n  export interface ReferenceDefinition extends BaseDefinitionOptions {\n    type: 'reference'\n    to: TypeDefinition | TypeReference | Array<TypeDefinition | TypeReference>\n    weak?: boolean\n    options?: ReferenceOptions\n  }\n\n  export interface CrossDatasetReferenceDefinition extends BaseDefinitionOptions {\n    type: 'crossDatasetReference'\n    weak?: boolean\n    to: {\n      type: string\n      title?: string\n      icon?: ComponentType\n      preview?: PreviewConfig\n      // eslint-disable-next-line camelcase\n      __experimental_search?: {path: string | string[]; weight?: number; mapWith?: string}[]\n    }[]\n\n    dataset: string\n    projectId: string\n    studioUrl?: (document: {id: string; type?: string}) => string | null\n    tokenId: string\n    options?: ReferenceOptions\n  }\n\n  export interface SlugDefinition extends BaseDefinitionOptions {\n    type: 'slug'\n    options?: SlugOptions\n  }\n\n  export interface StringOptions {\n    list?: Array<string | {title: string; value: string}>\n    layout?: 'radio' | 'dropdown'\n    direction?: 'vertical' | 'horizontal'\n  }\n\n  export interface StringDefinition extends BaseDefinitionOptions {\n    type: 'string'\n    options?: StringOptions\n  }\n\n  export interface SpanDefinition extends BaseDefinitionOptions {\n    type: 'span'\n  }\n\n  export interface TextDefinition extends BaseDefinitionOptions {\n    type: 'text'\n    rows?: number\n  }\n\n  export interface UrlDefinition extends BaseDefinitionOptions {\n    type: 'url'\n  }\n}\n\nexport function defineType<TType extends string>(\n  schemaDefinition: Schema.TypeAliasDefinition\n): Schema.TypeAliasDefinition\n\nexport function defineType<TType extends Schema.Type>(\n  schemaDefinition: Extract<Schema.IntrinsicTypeDefinition, {type: TType}>\n): Extract<Schema.IntrinsicTypeDefinition, {type: TType}>\n\nexport function defineType<TType extends Schema.Type>(\n  schemaDefinition: Schema.TypeDefinition<TType>\n): Schema.TypeDefinition<TType> {\n  return schemaDefinition\n}\n\nexport function defineField<TType extends Schema.Type>(\n  schemaField: Schema.FieldDefinition<TType>\n): Schema.FieldDefinition<TType> {\n  return schemaField\n}\n\n/**\n * Note: you probably want `SchemaTypeDefinition` instead\n * @see SchemaTypeDefinition\n */\nexport type SchemaType =\n  | ArraySchemaType\n  | BooleanSchemaType\n  | FileSchemaType\n  | NumberSchemaType\n  | ObjectSchemaType\n  | StringSchemaType\n  | ReferenceSchemaType\n\n/**\n * Represents a Sanity schema type definition with an optional type parameter.\n *\n * It's recommend to use the `defineType` helper instead of this type by\n * itself.\n */\nexport type SchemaTypeDefinition<TType extends Schema.Type = Schema.Type> =\n  Schema.TypeDefinition<TType>\n\nexport interface SchemaValidationError {\n  helpId?: string\n  message: string\n  severity: 'error'\n}\n\nexport interface SchemaValidationWarning {\n  helpId?: string\n  message: string\n  severity: 'warning'\n}\n\nexport type SchemaValidationProblem = SchemaValidationError | SchemaValidationWarning\n\nexport type SchemaValidationProblemPath = Array<\n  {kind: 'type'; type: string; name: string} | {kind: 'property'; name: string}\n>\n\nexport interface SchemaValidationProblemGroup {\n  path: SchemaValidationProblemPath\n  problems: SchemaValidationProblem[]\n}\n\nexport interface Schema {\n  _original?: {\n    name: string\n    types: SchemaTypeDefinition[]\n  }\n  _registry: {[typeName: string]: any}\n  _validation?: SchemaValidationProblemGroup[]\n  name: string\n  get: (name: string) => SchemaType | undefined\n  has: (name: string) => boolean\n  getTypeNames: () => string[]\n}\n\nexport interface SortOrderingItem {\n  field: string\n  direction: 'asc' | 'desc'\n}\n\nexport type SortOrdering = {\n  title: string\n  name: string\n  by: SortOrderingItem[]\n}\nexport interface ConditionalPropertyCallbackContext {\n  document: SanityDocument | undefined\n  // `any` should be fine here. leaving this as `unknown` would cause more\n  // friction for end users\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  parent: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any\n  currentUser: Omit<CurrentUser, 'role'> | null\n}\n\nexport type ConditionalPropertyCallback = (context: ConditionalPropertyCallbackContext) => boolean\nexport type ConditionalProperty = boolean | ConditionalPropertyCallback | undefined\n\nexport interface InitialValueResolverContext {\n  projectId: string\n  dataset: string\n  schema: Schema\n  currentUser: CurrentUser | null\n  client: SanityClient\n}\n\nexport type InitialValueResolver<Params, Value> = (\n  params: Params | undefined,\n  context: InitialValueResolverContext\n) => Promise<Value> | Value\nexport type InitialValueProperty<Params, Value> =\n  | Value\n  | InitialValueResolver<Params, Value>\n  | undefined\n\n/**\n * Represents the possible values of a schema type's `validation` field.\n *\n * If the schema has not been run through `inferFromSchema` from\n * `@sanity/validation` then value could be a function.\n *\n * `inferFromSchema` mutates the schema converts this value to an array of\n * `Rule` instances.\n *\n * @privateRemarks\n *\n * Usage of the schema inside the studio will almost always be from the compiled\n * `createSchema` function. In this case, you can cast the value or throw to\n * narrow the type. E.g.:\n *\n * ```ts\n * if (typeof type.validation === 'function') {\n *   throw new Error(\n *     `Schema type \"${type.name}\"'s \\`validation\\` was not run though \\`inferFromSchema\\``\n *   )\n * }\n * ```\n */\nexport type SchemaValidationValue =\n  | false\n  | undefined\n  | Rule\n  | SchemaValidationValue[]\n  | ((rule: Rule) => SchemaValidationValue)\n\nexport interface BaseSchemaType {\n  name: string\n  title?: string\n  description?: string\n  type?: SchemaType\n  liveEdit?: boolean\n  readOnly?: ConditionalProperty\n  hidden?: ConditionalProperty\n  icon?: ComponentType\n  initialValue?: InitialValueProperty<any, any>\n  validation?: SchemaValidationValue\n  preview?: PreviewConfig\n  components?: {\n    diff?: React.ComponentType<any> // @todo: use `DiffProps` here\n    field?: React.ComponentType<any> // @todo: use `FieldProps` here\n    input?: React.ComponentType<any> // @todo: use `InputProps` here\n    item?: React.ComponentType<any> // @todo: use `ItemProps` here\n    preview?: React.ComponentType<any> // @todo: use `PreviewProps` here\n  }\n\n  /**\n   * @deprecated This will be removed.\n   */\n  placeholder?: string\n}\n\nexport interface TitledListValue<V = unknown> {\n  _key?: string\n  title: string\n  value?: V\n}\n\nexport interface EnumListProps<V = unknown> {\n  list?: TitledListValue<V>[] | V[]\n  layout?: 'radio' | 'dropdown'\n  direction?: 'horizontal' | 'vertical'\n}\n\nexport interface StringSchemaType extends BaseSchemaType {\n  jsonType: 'string'\n  options?: EnumListProps<string> & {\n    // Actually just part of date time, but can't find a good way to differentiate\n    dateFormat?: string\n    timeFormat?: string\n  }\n  initialValue?: ((arg?: any) => Promise<string> | string) | string | undefined\n}\n\nexport interface TextSchemaType extends StringSchemaType {\n  rows?: number\n}\n\nexport interface NumberSchemaType extends BaseSchemaType {\n  jsonType: 'number'\n  options?: EnumListProps<number>\n  initialValue?: InitialValueProperty<any, number>\n}\n\nexport interface BooleanSchemaType extends BaseSchemaType {\n  jsonType: 'boolean'\n  options?: {\n    layout: 'checkbox' | 'switch'\n  }\n  initialValue?: InitialValueProperty<any, boolean>\n}\n\nexport interface ArraySchemaType<V = unknown> extends BaseSchemaType {\n  jsonType: 'array'\n  of: (Exclude<SchemaType, ArraySchemaType> | ReferenceSchemaType)[]\n  options?: {\n    list?: TitledListValue<V>[] | V[]\n    layout?: V extends string ? 'tags' : 'grid'\n    direction?: 'horizontal' | 'vertical'\n    sortable?: boolean\n    modal?: {type?: 'dialog' | 'popover'; width?: number | 'auto'}\n  }\n}\n\n// Note: this would ideally be a type parameter in `ArraySchemaType` however\n// adding one conflicts with the existing definition.\nexport type ArraySchemaTypeOf<TSchemaType extends ArraySchemaType['of'][number]> = Omit<\n  ArraySchemaType,\n  'of'\n> & {of: TSchemaType[]}\n\n/**\n * A specific `ObjectField` for `marks` in `SpanSchemaType`\n * @see SpanSchemaType\n */\nexport type MarksObjectField = {name: 'marks'} & ObjectField<ArraySchemaTypeOf<StringSchemaType>>\n\n/**\n * A specific `ObjectField` for `text` in `SpanSchemaType`\n * @see SpanSchemaType\n */\nexport type TextObjectField = {name: 'text'} & ObjectField<TextSchemaType>\n\n/**\n * A specific `ObjectField` for `style` in `BlockSchemaType`\n * @see BlockSchemaType\n */\nexport type StyleObjectField = {name: 'style'} & ObjectField<StringSchemaType>\n\n/**\n * A specific `ObjectField` for `list` in `BlockSchemaType`\n * @see BlockSchemaType\n */\nexport type ListObjectField = {name: 'list'} & ObjectField<StringSchemaType>\n\n/**\n * The specific `children` field of a `block` type (`BlockSchemaType`)\n * @see BlockSchemaType\n */\nexport type BlockChildrenObjectField = {name: 'children'} & ObjectField<ArraySchemaType>\n\n/**\n * Represents the compiled schema shape for `span`s for portable text.\n *\n * Note: this does _not_ represent the schema definition shape.\n */\nexport interface SpanSchemaType extends Omit<ObjectSchemaType, 'fields'> {\n  annotations: (ObjectSchemaType & {\n    blockEditor?: {\n      icon?: string | ComponentType\n      render?: ComponentType\n    }\n  })[]\n  decorators: TitledListValue<string>[]\n  // the first field will always be the `marks` field and the second will\n  // always be the `text` field\n  fields: [MarksObjectField, TextObjectField]\n}\n\n/**\n * Represents the compiled schema shape for `block`s for portable text.\n *\n * Note: this does _not_ represent the schema definition shape.\n */\nexport interface BlockSchemaType extends ObjectSchemaType {\n  fields: [\n    // the first 3 field are always block children, styles, and lists\n    BlockChildrenObjectField,\n    StyleObjectField,\n    ListObjectField,\n    // then it could be any additional fields the user could add\n    ...ObjectField[]\n  ]\n}\n\nexport interface SlugSchemaType extends ObjectSchemaType {\n  jsonType: 'object'\n  options?: SlugOptions\n}\n\nexport type ObjectFieldType<T extends SchemaType = SchemaType> = T & {\n  hidden?: ConditionalProperty\n  readOnly?: ConditionalProperty\n}\n\nexport interface ObjectField<T extends SchemaType = SchemaType> {\n  name: string\n  fieldset?: string\n  group?: string | string[]\n  type: ObjectFieldType<T>\n}\nexport interface FieldGroup {\n  name: string\n  icon?: React.ComponentType\n  title?: string\n  description?: string\n  hidden?: ConditionalProperty\n  default?: boolean\n  fields?: ObjectField[]\n}\n\nexport interface ObjectSchemaType extends BaseSchemaType {\n  jsonType: 'object'\n  fields: ObjectField[]\n  groups?: FieldGroup[]\n  fieldsets?: Fieldset[]\n  initialValue?: InitialValueProperty<any, Record<string, unknown>>\n  weak?: boolean\n\n  // Experimentals\n  // Note: `path` is a string in the _specification_, but converted to a\n  // string array in the schema normalization/compilation step\n  // eslint-disable-next-line camelcase\n  __experimental_search?: {path: string[]; weight: number; mapWith?: string}[]\n\n  /**\n   * @beta\n   */\n  orderings?: SortOrdering[]\n\n  // @todo\n  options?: any\n}\n\nexport interface ObjectSchemaTypeWithOptions extends Omit<ObjectSchemaType, 'options'> {\n  options?: CollapseOptions & {\n    columns?: number\n  }\n}\n\nexport interface SingleFieldSet {\n  single: true\n  field: ObjectField\n  hidden?: ConditionalProperty\n  readOnly?: ConditionalProperty\n  group?: string | string[]\n}\n\nexport interface MultiFieldSet {\n  name: string\n  title?: string\n  description?: string\n  single?: false\n  group?: string | string[]\n  options?: CollapseOptions & {\n    columns?: number\n  }\n  fields: ObjectField[]\n  hidden?: ConditionalProperty\n  readOnly?: ConditionalProperty\n}\n\nexport type Fieldset = SingleFieldSet | MultiFieldSet\n\nexport interface CollapseOptions {\n  collapsed?: boolean\n\n  collapsible?: boolean\n\n  /**\n   * @deprecated Use `collapsible` instead\n   */\n  collapsable?: boolean\n}\n\nexport interface ReferenceSchemaType extends Omit<ObjectSchemaType, 'options'> {\n  jsonType: 'object'\n  to: ObjectSchemaType[]\n  weak?: boolean\n  options?: ReferenceOptions\n}\n\nexport interface AssetSchemaTypeOptions {\n  accept?: string\n  storeOriginalFilename?: boolean\n}\n\nexport interface FileSchemaType extends Omit<ObjectSchemaType, 'options'> {\n  options?: AssetSchemaTypeOptions & {\n    sources?: AssetSource[]\n  }\n}\n\nexport interface ImageSchemaType extends Omit<ObjectSchemaType, 'options'> {\n  options?: AssetSchemaTypeOptions & {\n    hotspot?: boolean\n    metadata?: ('exif' | 'location' | 'lqip' | 'palette' | 'blurhash')[]\n    sources?: AssetSource[]\n  }\n}\n","import type {CrossDatasetReferenceSchemaType} from '../crossDatasetReference'\nimport type {\n  BlockSchemaType,\n  ArraySchemaType,\n  ObjectSchemaType,\n  ReferenceSchemaType,\n  SpanSchemaType,\n  TitledListValue,\n  BlockChildrenObjectField,\n  StyleObjectField,\n  ListObjectField,\n  BooleanSchemaType,\n  StringSchemaType,\n  NumberSchemaType,\n  SchemaType,\n} from './types'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return !!value && (typeof value == 'object' || typeof value == 'function')\n}\n\n/**\n * Returns wether or not the given type is a document type\n * (eg that it was defined as `type: 'document'`)\n *\n * @param type - Schema type to test\n * @returns True if type is a document type, false otherwise\n * @public\n */\nexport function isDocumentSchemaType(type: unknown): type is ObjectSchemaType {\n  if (!isObjectSchemaType(type)) {\n    return false\n  }\n\n  let current: SchemaType | undefined = type as SchemaType\n  while (current) {\n    if (current.name === 'document') {\n      return true\n    }\n\n    current = current.type\n  }\n  return false\n}\n\nexport function isObjectSchemaType(type: unknown): type is ObjectSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'object'\n}\n\nexport function isArraySchemaType(type: unknown): type is ArraySchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'array'\n}\n\nexport function isArrayOfObjectsSchemaType(\n  type: unknown\n): type is ArraySchemaType<ObjectSchemaType> {\n  return isArraySchemaType(type) && type.of.every((memberType) => isObjectSchemaType(memberType))\n}\n\nexport function isArrayOfPrimitivesSchemaType(type: unknown): type is ArraySchemaType {\n  return isArraySchemaType(type) && type.of.every((memberType) => isPrimitiveSchemaType(memberType))\n}\n\nexport function isBooleanSchemaType(type: unknown): type is BooleanSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'boolean'\n}\n\nexport function isStringSchemaType(type: unknown): type is StringSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'string'\n}\n\nexport function isNumberSchemaType(type: unknown): type is NumberSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'number'\n}\n\nexport function isPrimitiveSchemaType(\n  type: unknown\n): type is BooleanSchemaType | StringSchemaType | NumberSchemaType {\n  return isBooleanSchemaType(type) || isStringSchemaType(type) || isNumberSchemaType(type)\n}\n\nexport function isReferenceSchemaType(type: unknown): type is ReferenceSchemaType {\n  return isRecord(type) && (type.name === 'reference' || isReferenceSchemaType(type.type))\n}\n\nexport function isCrossDatasetReferenceSchemaType(\n  type: unknown\n): type is CrossDatasetReferenceSchemaType {\n  return (\n    isRecord(type) &&\n    (type.name === 'crossDatasetReference' || isCrossDatasetReferenceSchemaType(type.type))\n  )\n}\n\nexport function isTitledListValue(item: unknown): item is TitledListValue {\n  return typeof item === 'object' && item !== null && 'title' in item && 'value' in item\n}\n\nexport function isSpanSchemaType(type: unknown): type is SpanSchemaType {\n  if (!isRecord(type)) return false\n  // we check for `annotations` and `decorators` instead of `type.name` because\n  // schema names can technically change if someone extends the type\n  return Array.isArray(type.annotations) && Array.isArray(type.decorators)\n}\n\nexport function isBlockSchemaType(type: unknown): type is BlockSchemaType {\n  if (!isRecord(type)) return false\n  if (!Array.isArray(type.fields)) return false\n\n  const [maybeSpanChildren, maybeStyle, maybeList] = type.fields\n  return (\n    isBlockChildrenObjectField(maybeSpanChildren) &&\n    isStyleObjectField(maybeStyle) &&\n    isListObjectField(maybeList)\n  )\n}\n\nexport function isStyleObjectField(field: unknown): field is StyleObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'style') return false\n  return isRecord(field.type) && field.type.jsonType === 'string'\n}\n\nexport function isListObjectField(field: unknown): field is ListObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'list') return false\n  return isRecord(field.type) && field.type.jsonType === 'string'\n}\n\nexport function isBlockChildrenObjectField(field: unknown): field is BlockChildrenObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'children') return false\n  if (!isArraySchemaType(field.type)) return false\n  // there will always be a span item in `SpanChildrenObjectField`\n  return field.type.of.some(isSpanSchemaType)\n}\n","import type {Mutation} from '../mutations'\nimport type {CreateSquashedMutation, TransactionLogMutation} from './types'\n\nexport function isCreateSquashedMutation(\n  mutation: Mutation | TransactionLogMutation\n): mutation is CreateSquashedMutation {\n  return 'createSquashed' in mutation\n}\n","import type {NodeValidation} from './types'\n\nexport function isValidationError(node: NodeValidation): node is NodeValidation & {level: 'error'} {\n  return node.level === 'error'\n}\n\nexport function isValidationWarning(\n  node: NodeValidation\n): node is NodeValidation & {level: 'warning'} {\n  return node.level === 'warning'\n}\n\nexport function isValidationInfo(node: NodeValidation): node is NodeValidation & {level: 'info'} {\n  return node.level === 'info'\n}\n"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","isRecord"],"mappings":"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"}