"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PresenceTooltip = PresenceTooltip;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _UserAvatar = require("../components/UserAvatar");

var _PresenceTooltip = require("./PresenceTooltip.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * The "documentScrollElement" is being passed to the PortalProvider in DocumentPanel.
 * The default portal element provided by the PortalProvider causes some layout issues with the Tooltip.
 * Therefore, another portal element (i.e. the "documentScrollElement") is being used to solve this.
 */
function PresenceTooltip(props) {
  var children = props.children,
      items = props.items;
  var content = (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 1
  }, items.map(item => /*#__PURE__*/_react.default.createElement(_ui.Box, {
    key: item.user.id,
    padding: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_UserAvatar.UserAvatar, {
    user: item.user,
    status: "online"
  })), /*#__PURE__*/_react.default.createElement(_PresenceTooltip.TextWrapper, null, item.user.displayName))))), [items]);
  return /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: content,
    placement: "top",
    portal: "documentScrollElement"
  }, children);
}