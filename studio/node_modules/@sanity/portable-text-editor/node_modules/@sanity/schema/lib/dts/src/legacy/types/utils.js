export function lazyGetter(target, key, getter, config) {
    if (config === void 0) { config = {}; }
    Object.defineProperty(target, key, {
        configurable: true,
        enumerable: config.enumerable !== false,
        get: function () {
            var val = getter();
            Object.defineProperty(target, key, {
                value: val,
                writable: Boolean(config.writable),
                configurable: false,
            });
            return val;
        },
    });
    return target;
}
//
// const o = lazyGetter({}, 'expensive', function() {
//   console.log('doing expensive calculations')
//   return 'RESULT OF EXPENSIVE'
// })
//
// console.log(o.expensive)
// console.log(o.expensive)
// console.log(o.expensive)
//# sourceMappingURL=utils.js.map