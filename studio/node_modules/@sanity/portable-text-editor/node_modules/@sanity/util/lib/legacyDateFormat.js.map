{"version":3,"file":"legacyDateFormat.js","sources":["../src/legacyDateFormat.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport moment from 'moment'\n\nexport type ParseResult = {isValid: boolean; date?: Date; error?: string} & (\n  | {isValid: true; date: Date}\n  | {isValid: false; error?: string}\n)\n\n// todo: find a way to get rid of moment there.\n// note: the format comes form peoples schemas, so we need to deprecate it for a while and\n// find a way to tell people that they need to change it\nexport function format(input: Date, format: string) {\n  return moment(input).format(format)\n}\n\nexport function parse(dateString: string, format: string): ParseResult {\n  const parsed = moment(dateString, format, true)\n  if (parsed.isValid()) {\n    return {isValid: true, date: parsed.toDate()}\n  }\n  return {isValid: false, error: `Invalid date. Must be on the format \"${format}\"`}\n}\n"],"names":[],"mappings":";;AAAA;AAQA;AACA;AACA;AACgB,SAAA,MAAM,CAAC,KAAW,EAAE,MAAc,EAAA;IAChD,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AACrC,CAAC;AAEe,SAAA,KAAK,CAAC,UAAkB,EAAE,MAAc,EAAA;IACtD,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;AAC/C,IAAA,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;AACpB,QAAA,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,EAAC,CAAA;AAC9C,KAAA;IACD,OAAO,EAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAwC,qCAAA,EAAA,MAAM,CAAG,CAAA,CAAA,EAAC,CAAA;AACnF;;;;"}