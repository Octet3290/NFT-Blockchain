{"version":3,"file":"index.js","sources":["../src/util/findBlockType.ts","../src/util/blockContentTypeFeatures.ts","../../../../node_modules/tslib/tslib.es6.js","../src/util/resolveJsType.ts","../src/util/randomKey.ts","../src/constants.ts","../src/HtmlDeserializer/preprocessors/xpathResult.ts","../src/HtmlDeserializer/preprocessors/html.ts","../src/HtmlDeserializer/preprocessors/word.ts","../src/HtmlDeserializer/preprocessors/gdocs.ts","../src/HtmlDeserializer/preprocessors/index.ts","../src/HtmlDeserializer/helpers.ts","../src/HtmlDeserializer/rules/html.ts","../src/HtmlDeserializer/rules/gdocs.ts","../src/HtmlDeserializer/rules/word.ts","../src/HtmlDeserializer/rules/index.ts","../src/HtmlDeserializer/index.ts","../src/util/normalizeBlock.ts","../src/index.ts"],"sourcesContent":["import type {BlockSchemaType, SchemaType} from '@sanity/types'\n\nexport function findBlockType(type: SchemaType): type is BlockSchemaType {\n  if (type.type) {\n    return findBlockType(type.type)\n  }\n\n  if (type.name === 'block') {\n    return true\n  }\n\n  return false\n}\n","import {\n  ArraySchemaType,\n  BlockSchemaType,\n  EnumListProps,\n  isBlockChildrenObjectField,\n  isBlockSchemaType,\n  isListObjectField,\n  isObjectSchemaType,\n  isStyleObjectField,\n  isTitledListValue,\n  ObjectSchemaType,\n  SpanSchemaType,\n  TitledListValue,\n} from '@sanity/types'\nimport {BlockContentFeatures, ResolvedAnnotationType} from '../types'\nimport {findBlockType} from './findBlockType'\n\n// Helper method for describing a blockContentType's feature set\nexport default function blockContentFeatures(\n  blockContentType: ArraySchemaType\n): BlockContentFeatures {\n  if (!blockContentType) {\n    throw new Error(\"Parameter 'blockContentType' required\")\n  }\n\n  const blockType = blockContentType.of.find(findBlockType)\n  if (!isBlockSchemaType(blockType)) {\n    throw new Error(\"'block' type is not defined in this schema (required).\")\n  }\n\n  const ofType = blockType.fields.find(isBlockChildrenObjectField)?.type?.of\n  if (!ofType) {\n    throw new Error('No `of` declaration found for blocks `children` field')\n  }\n\n  const spanType = ofType.find((member): member is SpanSchemaType => member.name === 'span')\n  if (!spanType) {\n    throw new Error('No `span` type found in `block` schema type `children` definition')\n  }\n\n  const inlineObjectTypes = ofType.filter(\n    (inlineType): inlineType is ObjectSchemaType =>\n      inlineType.name !== 'span' && isObjectSchemaType(inlineType)\n  )\n\n  const blockObjectTypes = blockContentType.of.filter(\n    (memberType): memberType is ObjectSchemaType =>\n      memberType.name !== blockType.name && isObjectSchemaType(memberType)\n  )\n\n  return {\n    styles: resolveEnabledStyles(blockType),\n    decorators: resolveEnabledDecorators(spanType),\n    annotations: resolveEnabledAnnotationTypes(spanType),\n    lists: resolveEnabledListItems(blockType),\n    types: {\n      block: blockContentType,\n      span: spanType,\n      inlineObjects: inlineObjectTypes,\n      blockObjects: blockObjectTypes,\n    },\n  }\n}\n\nfunction resolveEnabledStyles(blockType: BlockSchemaType): TitledListValue<string>[] {\n  const styleField = blockType.fields.find(isStyleObjectField)\n  if (!styleField) {\n    throw new Error(\"A field with name 'style' is not defined in the block type (required).\")\n  }\n\n  const textStyles = getTitledListValuesFromEnumListOptions(styleField.type.options)\n  if (textStyles.length === 0) {\n    throw new Error(\n      'The style fields need at least one style ' +\n        \"defined. I.e: {title: 'Normal', value: 'normal'}.\"\n    )\n  }\n\n  return textStyles\n}\n\nfunction resolveEnabledAnnotationTypes(spanType: SpanSchemaType): ResolvedAnnotationType[] {\n  return spanType.annotations.map((annotation) => ({\n    blockEditor: annotation.blockEditor,\n    title: annotation.title,\n    type: annotation,\n    value: annotation.name,\n    icon: annotation.icon,\n  }))\n}\n\nfunction resolveEnabledDecorators(spanType: SpanSchemaType): TitledListValue<string>[] {\n  return spanType.decorators\n}\n\nfunction resolveEnabledListItems(blockType: BlockSchemaType): TitledListValue<string>[] {\n  const listField = blockType.fields.find(isListObjectField)\n  if (!listField) {\n    throw new Error(\"A field with name 'list' is not defined in the block type (required).\")\n  }\n\n  const listItems = getTitledListValuesFromEnumListOptions(listField.type.options)\n  if (!listItems) {\n    throw new Error('The list field need at least to be an empty array')\n  }\n\n  return listItems\n}\n\nfunction getTitledListValuesFromEnumListOptions(\n  options: EnumListProps<string> | undefined\n): TitledListValue<string>[] {\n  const list = options ? options.list : undefined\n  if (!Array.isArray(list)) {\n    return []\n  }\n\n  return list.map((item) => (isTitledListValue(item) ? item : {title: item, value: item}))\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","const toString = Object.prototype.toString\n\n// Copied from https://github.com/ForbesLindesay/type-of\n// but inlined to have fine grained control\nexport function resolveJsType(val: unknown) {\n  switch (toString.call(val)) {\n    case '[object Function]':\n      return 'function'\n    case '[object Date]':\n      return 'date'\n    case '[object RegExp]':\n      return 'regexp'\n    case '[object Arguments]':\n      return 'arguments'\n    case '[object Array]':\n      return 'array'\n    case '[object String]':\n      return 'string'\n    default:\n  }\n\n  if (val === null) {\n    return 'null'\n  }\n\n  if (val === undefined) {\n    return 'undefined'\n  }\n\n  if (\n    val &&\n    typeof val === 'object' &&\n    'nodeType' in val &&\n    (val as {nodeType: unknown}).nodeType === 1\n  ) {\n    return 'element'\n  }\n\n  if (val === Object(val)) {\n    return 'object'\n  }\n\n  return typeof val\n}\n","import getRandomValues from 'get-random-values-esm'\n\n// WHATWG crypto RNG - https://w3c.github.io/webcrypto/Overview.html\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length)\n  getRandomValues(rnds8)\n  return rnds8\n}\n\nconst byteToHex: string[] = []\nfor (let i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substring(1)\n}\n\n/**\n * Generate a random key of the given length\n *\n * @param length - Length of string to generate\n * @returns A string of the given length\n * @public\n */\nexport function randomKey(length: number): string {\n  return whatwgRNG(length)\n    .reduce((str, n) => str + byteToHex[n], '')\n    .slice(0, length)\n}\n","import {uniq} from 'lodash'\n\nexport interface PartialBlock {\n  _type: string\n  markDefs: string[]\n  style: string\n  level?: number\n  listItem?: string\n}\n\nexport const BLOCK_DEFAULT_STYLE = 'normal'\n\nexport const DEFAULT_BLOCK: PartialBlock = Object.freeze({\n  _type: 'block',\n  markDefs: [],\n  style: BLOCK_DEFAULT_STYLE,\n})\n\nexport const DEFAULT_SPAN = Object.freeze({\n  _type: 'span',\n  marks: [] as string[],\n})\n\nexport const HTML_BLOCK_TAGS = {\n  p: DEFAULT_BLOCK,\n  blockquote: {...DEFAULT_BLOCK, style: 'blockquote'} as PartialBlock,\n}\n\nexport const HTML_SPAN_TAGS = {\n  span: {object: 'text'},\n}\n\nexport const HTML_LIST_CONTAINER_TAGS: Record<string, {object: null} | undefined> = {\n  ol: {object: null},\n  ul: {object: null},\n}\n\nexport const HTML_HEADER_TAGS: Record<string, PartialBlock | undefined> = {\n  h1: {...DEFAULT_BLOCK, style: 'h1'},\n  h2: {...DEFAULT_BLOCK, style: 'h2'},\n  h3: {...DEFAULT_BLOCK, style: 'h3'},\n  h4: {...DEFAULT_BLOCK, style: 'h4'},\n  h5: {...DEFAULT_BLOCK, style: 'h5'},\n  h6: {...DEFAULT_BLOCK, style: 'h6'},\n}\n\nexport const HTML_MISC_TAGS = {\n  br: {...DEFAULT_BLOCK, style: BLOCK_DEFAULT_STYLE} as PartialBlock,\n}\n\nexport const HTML_DECORATOR_TAGS: Record<string, string | undefined> = {\n  b: 'strong',\n  strong: 'strong',\n\n  i: 'em',\n  em: 'em',\n\n  u: 'underline',\n  s: 'strike-through',\n  strike: 'strike-through',\n  del: 'strike-through',\n\n  code: 'code',\n}\n\nexport const HTML_LIST_ITEM_TAGS: Record<string, PartialBlock | undefined> = {\n  li: {\n    ...DEFAULT_BLOCK,\n    style: BLOCK_DEFAULT_STYLE,\n    level: 1,\n    listItem: 'bullet',\n  },\n}\n\nexport const ELEMENT_MAP = {\n  ...HTML_BLOCK_TAGS,\n  ...HTML_SPAN_TAGS,\n  ...HTML_LIST_CONTAINER_TAGS,\n  ...HTML_LIST_ITEM_TAGS,\n  ...HTML_HEADER_TAGS,\n  ...HTML_MISC_TAGS,\n}\n\nexport const DEFAULT_SUPPORTED_STYLES = uniq(\n  Object.values(ELEMENT_MAP)\n    .filter((tag): tag is PartialBlock => 'style' in tag)\n    .map((tag) => tag.style)\n)\n\nexport const DEFAULT_SUPPORTED_DECORATORS = uniq(Object.values(HTML_DECORATOR_TAGS))\n\nexport const DEFAULT_SUPPORTED_ANNOTATIONS = ['link']\n","// We need this here if run server side\nexport const _XPathResult = {\n  ANY_TYPE: 0,\n  NUMBER_TYPE: 1,\n  STRING_TYPE: 2,\n  BOOLEAN_TYPE: 3,\n  UNORDERED_NODE_ITERATOR_TYPE: 4,\n  ORDERED_NODE_ITERATOR_TYPE: 5,\n  UNORDERED_NODE_SNAPSHOT_TYPE: 6,\n  ORDERED_NODE_SNAPSHOT_TYPE: 7,\n  ANY_UNORDERED_NODE_TYPE: 8,\n  FIRST_ORDERED_NODE_TYPE: 9,\n}\n","import {_XPathResult} from './xpathResult'\n\n// Remove this cruft from the document\nconst unwantedWordDocumentPaths = [\n  '/html/text()',\n  '/html/head/text()',\n  '/html/body/text()',\n  '/html/body/ul/text()',\n  '/html/body/ol/text()',\n  '//comment()',\n  '//style',\n  '//xml',\n  '//script',\n  '//meta',\n  '//link',\n]\n\nexport default (html: string, doc: Document): Document => {\n  // Make sure text directly on the body is wrapped in spans.\n  // This mimics what the browser does before putting html on the clipboard,\n  // when used in a script context with JSDOM\n  const bodyTextNodes = doc.evaluate(\n    '/html/body/text()',\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n\n  for (let i = bodyTextNodes.snapshotLength - 1; i >= 0; i--) {\n    const node = bodyTextNodes.snapshotItem(i) as HTMLElement\n    const text = node.textContent || ''\n    if (text.replace(/[^\\S\\n]+$/g, '')) {\n      const newNode = doc.createElement('span')\n      newNode.appendChild(doc.createTextNode(text))\n      node.parentNode?.replaceChild(newNode, node)\n    } else {\n      node.parentNode?.removeChild(node)\n    }\n  }\n\n  const unwantedNodes = doc.evaluate(\n    unwantedWordDocumentPaths.join('|'),\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n  for (let i = unwantedNodes.snapshotLength - 1; i >= 0; i--) {\n    const unwanted = unwantedNodes.snapshotItem(i)\n    if (!unwanted) {\n      continue\n    }\n    unwanted.parentNode?.removeChild(unwanted)\n  }\n  return doc\n}\n","import {_XPathResult} from './xpathResult'\n\nconst WORD_HTML_REGEX = /(class=\"?Mso|style=(?:\"|')[^\"]*?\\bmso-|w:WordDocument|<o:\\w+>|<\\/font>)/\n\n// xPaths for elements that will be removed from the document\nconst unwantedPaths = [\n  '//o:p',\n  \"//span[@style='mso-list:Ignore']\",\n  \"//span[@style='mso-list: Ignore']\",\n]\n\n// xPaths for elements that needs to be remapped into other tags\nconst mappedPaths = [\n  \"//p[@class='MsoTocHeading']\",\n  \"//p[@class='MsoTitle']\",\n  \"//p[@class='MsoToaHeading']\",\n  \"//p[@class='MsoSubtitle']\",\n  \"//span[@class='MsoSubtleEmphasis']\",\n  \"//span[@class='MsoIntenseEmphasis']\",\n]\n\n// Which HTML element(s) to map the elements matching mappedPaths into\nconst elementMap: Record<string, string[] | undefined> = {\n  MsoTocHeading: ['h3'],\n  MsoTitle: ['h1'],\n  MsoToaHeading: ['h2'],\n  MsoSubtitle: ['h5'],\n  MsoSubtleEmphasis: ['span', 'em'],\n  MsoIntenseEmphasis: ['span', 'em', 'strong'],\n  // Remove cruft\n}\n\nfunction isWordHtml(html: string) {\n  return WORD_HTML_REGEX.test(html)\n}\n\nexport default (html: string, doc: Document): Document => {\n  if (!isWordHtml(html)) {\n    return doc\n  }\n\n  const unwantedNodes = doc.evaluate(\n    unwantedPaths.join('|'),\n    doc,\n    (prefix) => {\n      if (prefix === 'o') {\n        return 'urn:schemas-microsoft-com:office:office'\n      }\n      return null\n    },\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n\n  for (let i = unwantedNodes.snapshotLength - 1; i >= 0; i--) {\n    const unwanted = unwantedNodes.snapshotItem(i)\n    if (unwanted?.parentNode) {\n      unwanted.parentNode.removeChild(unwanted)\n    }\n  }\n\n  // Transform mapped elements into what they should be mapped to\n  const mappedElements = doc.evaluate(\n    mappedPaths.join('|'),\n    doc,\n    null,\n    _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n  for (let i = mappedElements.snapshotLength - 1; i >= 0; i--) {\n    const mappedElm = mappedElements.snapshotItem(i) as HTMLElement\n    const tags = elementMap[mappedElm.className]\n    const text = new Text(mappedElm.textContent || '')\n    if (!tags) {\n      continue\n    }\n\n    const parentElement = document.createElement(tags[0])\n    let parent = parentElement\n    let child = parentElement\n    tags.slice(1).forEach((tag) => {\n      child = document.createElement(tag)\n      parent.appendChild(child)\n      parent = child\n    })\n    child.appendChild(text)\n    mappedElm?.parentNode?.replaceChild(parentElement, mappedElm)\n  }\n\n  return doc\n}\n","import {_XPathResult} from './xpathResult'\n\nfunction isGoogleDocsDocument(el: Element) {\n  if (el.nodeType !== 1) {\n    return false\n  }\n  const id = el.getAttribute('id')\n  return id && id.match(/^docs-internal-guid-/) && el.tagName === 'B'\n}\n\nexport default (html: string, doc: Document): Document => {\n  if (doc.body.firstElementChild && isGoogleDocsDocument(doc.body.firstElementChild)) {\n    // Tag every child with attribute 'is-google-docs' so that the GDocs rule-set can\n    // work exclusivly on these children\n    const childNodes = doc.evaluate(\n      '//*',\n      doc,\n      null,\n      _XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n      null\n    )\n    for (let i = childNodes.snapshotLength - 1; i >= 0; i--) {\n      const elm = childNodes.snapshotItem(i) as HTMLElement\n      elm?.setAttribute('data-is-google-docs', 'true')\n    }\n    // Remove that 'b' which Google Docs wraps the HTML content in\n    doc.body.firstElementChild.replaceWith(...Array.from(doc.body.firstElementChild.childNodes))\n    return doc\n  }\n  return doc\n}\n","import preprocessHTML from './html'\nimport preprocessWord from './word'\nimport preprocessGDocs from './gdocs'\n\nexport default [preprocessWord, preprocessGDocs, preprocessHTML]\n","import {ArraySchemaType, Block, isBlock} from '@sanity/types'\nimport {isEqual} from 'lodash'\nimport {DEFAULT_BLOCK} from '../constants'\nimport {resolveJsType} from '../util/resolveJsType'\nimport type {\n  BlockEnabledFeatures,\n  HtmlParser,\n  MinimalBlock,\n  MinimalSpan,\n  PlaceholderAnnotation,\n  PlaceholderDecorator,\n  TypedObject,\n} from '../types'\nimport blockContentTypeFeatures from '../util/blockContentTypeFeatures'\nimport preprocessors from './preprocessors'\n\n/**\n * A utility function to create the options needed for the various rule sets,\n * based on the structure of the blockContentType\n *\n * @param blockContentType - Schema type for array containing _at least_ a block child type\n * @returns\n */\nexport function createRuleOptions(blockContentType: ArraySchemaType): BlockEnabledFeatures {\n  const features = blockContentTypeFeatures(blockContentType)\n  const enabledBlockStyles = features.styles.map((item) => item.value || item.title)\n  const enabledSpanDecorators = features.decorators.map((item) => item.value || item.title)\n  const enabledBlockAnnotations = features.annotations.map((item) => item.value || item.title || '')\n  return {\n    enabledBlockStyles,\n    enabledSpanDecorators,\n    enabledBlockAnnotations,\n  }\n}\n\n/**\n * Utility function that always return a lowerCase version of the element.tagName\n *\n * @param el - Element to get tag name for\n * @returns Lowercase tagName for that element, or undefined if not an element\n */\nexport function tagName(el: HTMLElement | Node | null): string | undefined {\n  if (el && 'tagName' in el) {\n    return el.tagName.toLowerCase()\n  }\n\n  return undefined\n}\n\n// TODO: make this plugin-style\nexport function preprocess(html: string, parseHtml: HtmlParser): Document {\n  const compactHtml = html\n    .trim() // Trim whitespace\n    .replace(/\\s\\s+/g, ' ') // Remove multiple whitespace\n    .replace(/[\\r\\n]/g, ' ') // Remove newlines / carriage returns\n  const doc = parseHtml(compactHtml)\n  preprocessors.forEach((processor) => {\n    processor(html, doc)\n  })\n  return doc\n}\n\n/**\n * A default `parseHtml` function that returns the html using `DOMParser`.\n *\n * @returns HTML Parser based on `DOMParser`\n */\nexport function defaultParseHtml(): HtmlParser {\n  if (resolveJsType(DOMParser) === 'undefined') {\n    throw new Error(\n      'The native `DOMParser` global which the `Html` deserializer uses by ' +\n        'default is not present in this environment. ' +\n        'You must supply the `options.parseHtml` function instead.'\n    )\n  }\n  return (html) => {\n    return new DOMParser().parseFromString(html, 'text/html')\n  }\n}\n\nexport function flattenNestedBlocks(blocks: TypedObject[]): TypedObject[] {\n  let depth = 0\n  const flattened: TypedObject[] = []\n  const traverse = (nodes: TypedObject[]) => {\n    const toRemove: TypedObject[] = []\n    nodes.forEach((node) => {\n      if (depth === 0) {\n        flattened.push(node)\n      }\n      if (isBlock(node)) {\n        if (depth > 0) {\n          toRemove.push(node)\n          flattened.push(node)\n        }\n        depth++\n        traverse(node.children)\n      }\n      if (node._type === '__block') {\n        toRemove.push(node)\n        flattened.push((node as any).block)\n      }\n    })\n    toRemove.forEach((node) => {\n      nodes.splice(nodes.indexOf(node), 1)\n    })\n    depth--\n  }\n  traverse(blocks)\n  return flattened\n}\n\nfunction nextSpan(block: Block, index: number) {\n  const next = block.children[index + 1]\n  return next && next._type === 'span' ? next : null\n}\n\nfunction prevSpan(block: Block, index: number) {\n  const prev = block.children[index - 1]\n  return prev && prev._type === 'span' ? prev : null\n}\n\nfunction isWhiteSpaceChar(text: string) {\n  return ['\\xa0', ' '].includes(text)\n}\n\n/**\n * NOTE: _mutates_ passed blocks!\n *\n * @param blocks - Array of blocks to trim whitespace for\n * @returns\n */\nexport function trimWhitespace(blocks: TypedObject[]): TypedObject[] {\n  blocks.forEach((block) => {\n    if (!isBlock(block)) {\n      return\n    }\n\n    // eslint-disable-next-line complexity\n    block.children.forEach((child, index) => {\n      if (child._type !== 'span') {\n        return\n      }\n      const nextChild = nextSpan(block, index)\n      const prevChild = prevSpan(block, index)\n      if (index === 0) {\n        child.text = child.text.replace(/^[^\\S\\n]+/g, '')\n      }\n      if (index === block.children.length - 1) {\n        child.text = child.text.replace(/[^\\S\\n]+$/g, '')\n      }\n      if (\n        /\\s/.test(child.text.substring(child.text.length - 1)) &&\n        nextChild &&\n        /\\s/.test(nextChild.text.substring(0, 1))\n      ) {\n        child.text = child.text.replace(/[^\\S\\n]+$/g, '')\n      }\n      if (\n        /\\s/.test(child.text.substring(0, 1)) &&\n        prevChild &&\n        /\\s/.test(prevChild.text.substring(prevChild.text.length - 1))\n      ) {\n        child.text = child.text.replace(/^[^\\S\\n]+/g, '')\n      }\n      if (!child.text) {\n        block.children.splice(index, 1)\n      }\n      if (prevChild && isEqual(prevChild.marks, child.marks) && isWhiteSpaceChar(child.text)) {\n        prevChild.text += ' '\n        block.children.splice(index, 1)\n      } else if (\n        nextChild &&\n        isEqual(nextChild.marks, child.marks) &&\n        isWhiteSpaceChar(child.text)\n      ) {\n        nextChild.text = ` ${nextChild.text}`\n        block.children.splice(index, 1)\n      }\n    })\n  })\n\n  return blocks\n}\n\nexport function ensureRootIsBlocks(blocks: TypedObject[]): TypedObject[] {\n  return blocks.reduce((memo, node, i, original) => {\n    if (node._type === 'block') {\n      memo.push(node)\n      return memo\n    }\n\n    if (node._type === '__block') {\n      memo.push((node as any).block)\n      return memo\n    }\n\n    const lastBlock = memo[memo.length - 1]\n    if (i > 0 && !isBlock(original[i - 1]) && isBlock<TypedObject>(lastBlock)) {\n      lastBlock.children.push(node)\n      return memo\n    }\n\n    const block = {\n      ...DEFAULT_BLOCK,\n      children: [node],\n    }\n\n    memo.push(block)\n    return memo\n  }, [] as TypedObject[])\n}\n\nexport function isNodeList(node: unknown): node is NodeList {\n  return Object.prototype.toString.call(node) == '[object NodeList]'\n}\n\nexport function isMinimalSpan(node: TypedObject): node is MinimalSpan {\n  return node._type === 'span'\n}\n\nexport function isMinimalBlock(node: TypedObject): node is MinimalBlock {\n  return node._type === 'block'\n}\n\nexport function isPlaceholderDecorator(node: TypedObject): node is PlaceholderDecorator {\n  return node._type === '__decorator'\n}\n\nexport function isPlaceholderAnnotation(node: TypedObject): node is PlaceholderAnnotation {\n  return node._type === '__annotation'\n}\n\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === 1\n}\n","import type {ArraySchemaType} from '@sanity/types'\nimport {randomKey} from '../../util/randomKey'\nimport {isElement, tagName} from '../helpers'\nimport {\n  DEFAULT_BLOCK,\n  DEFAULT_SPAN,\n  HTML_BLOCK_TAGS,\n  HTML_HEADER_TAGS,\n  HTML_SPAN_TAGS,\n  HTML_LIST_CONTAINER_TAGS,\n  HTML_LIST_ITEM_TAGS,\n  HTML_DECORATOR_TAGS,\n  PartialBlock,\n} from '../../constants'\nimport {BlockEnabledFeatures, DeserializerRule} from '../../types'\n\nexport function resolveListItem(listNodeTagName: string): string {\n  let listStyle\n  switch (listNodeTagName) {\n    case 'ul':\n      listStyle = 'bullet'\n      break\n    case 'ol':\n      listStyle = 'number'\n      break\n    default:\n      listStyle = 'bullet'\n  }\n  return listStyle\n}\n\nexport default function createHTMLRules(\n  blockContentType: ArraySchemaType,\n  options: BlockEnabledFeatures\n): DeserializerRule[] {\n  return [\n    // Text nodes\n    {\n      deserialize(el) {\n        const isValidWhiteSpace =\n          el.nodeType === 3 &&\n          (el.textContent || '').replace(/[\\r\\n]/g, ' ').replace(/\\s\\s+/g, ' ') === ' ' &&\n          el.nextSibling &&\n          el.nextSibling.nodeType !== 3 &&\n          el.previousSibling &&\n          el.previousSibling.nodeType !== 3\n        const isValidText =\n          (isValidWhiteSpace || el.textContent !== ' ') && tagName(el.parentNode) !== 'body'\n        if (el.nodeName === '#text' && isValidText) {\n          return {\n            ...DEFAULT_SPAN,\n            marks: [],\n            text: (el.textContent || '').replace(/\\s\\s+/g, ' '),\n          }\n        }\n        return undefined\n      },\n    }, // Blockquote element\n    {\n      deserialize(el, next) {\n        if (tagName(el) !== 'blockquote') {\n          return undefined\n        }\n        const blocks: Record<string, PartialBlock | undefined> = {\n          ...HTML_BLOCK_TAGS,\n          ...HTML_HEADER_TAGS,\n        }\n        delete blocks.blockquote\n\n        const children: HTMLElement[] = []\n        el.childNodes.forEach((node, index) => {\n          if (\n            node.nodeType === 1 &&\n            Object.keys(blocks).includes((node as Element).localName.toLowerCase())\n          ) {\n            if (!el.ownerDocument) {\n              return\n            }\n\n            const span = el.ownerDocument.createElement('span')\n            span.appendChild(el.ownerDocument.createTextNode('\\r'))\n            node.childNodes.forEach((cn) => {\n              span.appendChild(cn.cloneNode(true))\n            })\n            if (index !== el.childNodes.length) {\n              span.appendChild(el.ownerDocument.createTextNode('\\r'))\n            }\n            children.push(span)\n          } else {\n            children.push(node as HTMLElement)\n          }\n        })\n\n        return {\n          _type: 'block',\n          style: 'blockquote',\n          markDefs: [],\n          children: next(children),\n        }\n      },\n    }, // Block elements\n    {\n      deserialize(el, next) {\n        const blocks: Record<string, PartialBlock | undefined> = {\n          ...HTML_BLOCK_TAGS,\n          ...HTML_HEADER_TAGS,\n        }\n        const tag = tagName(el)\n        let block = tag ? blocks[tag] : undefined\n        if (!block) {\n          return undefined\n        }\n        // Don't add blocks into list items\n        if (el.parentNode && tagName(el) === 'li') {\n          return next(el.childNodes)\n        }\n        // If style is not supported, return a defaultBlockType\n        if (!options.enabledBlockStyles.includes(block.style)) {\n          block = DEFAULT_BLOCK\n        }\n        return {\n          ...block,\n          children: next(el.childNodes),\n        }\n      },\n    }, // Ignore span tags\n    {\n      deserialize(el, next) {\n        const tag = tagName(el)\n        if (!tag || !(tag in HTML_SPAN_TAGS)) {\n          return undefined\n        }\n        return next(el.childNodes)\n      },\n    }, // Ignore div tags\n    {\n      deserialize(el, next) {\n        const div = tagName(el) === 'div'\n        if (!div) {\n          return undefined\n        }\n        return next(el.childNodes)\n      },\n    }, // Ignore list containers\n    {\n      deserialize(el, next) {\n        const tag = tagName(el)\n        if (!tag || !(tag in HTML_LIST_CONTAINER_TAGS)) {\n          return undefined\n        }\n        return next(el.childNodes)\n      },\n    }, // Deal with br's\n    {\n      deserialize(el) {\n        if (tagName(el) === 'br') {\n          return {\n            ...DEFAULT_SPAN,\n            text: '\\n',\n          }\n        }\n        return undefined\n      },\n    }, // Deal with list items\n    {\n      deserialize(el, next) {\n        const tag = tagName(el)\n        const listItem = tag ? HTML_LIST_ITEM_TAGS[tag] : undefined\n        const parentTag = tagName(el.parentNode) || ''\n        if (!listItem || !el.parentNode || !HTML_LIST_CONTAINER_TAGS[parentTag]) {\n          return undefined\n        }\n\n        listItem.listItem = resolveListItem(parentTag)\n        return {\n          ...listItem,\n          children: next(el.childNodes),\n        }\n      },\n    }, // Deal with decorators\n    {\n      deserialize(el, next) {\n        const decorator = HTML_DECORATOR_TAGS[tagName(el) || '']\n        if (!decorator || !options.enabledSpanDecorators.includes(decorator)) {\n          return undefined\n        }\n        return {\n          _type: '__decorator',\n          name: decorator,\n          children: next(el.childNodes),\n        }\n      },\n    }, // Special case for hyperlinks, add annotation (if allowed by schema),\n    // If not supported just write out the link text and href in plain text.\n    {\n      deserialize(el, next) {\n        if (tagName(el) != 'a') {\n          return undefined\n        }\n        const linkEnabled = options.enabledBlockAnnotations.includes('link')\n        const href = isElement(el) && el.getAttribute('href')\n        if (!href) {\n          return next(el.childNodes)\n        }\n        let markDef\n        if (linkEnabled) {\n          markDef = {\n            _key: randomKey(12),\n            _type: 'link',\n            href: href,\n          }\n          return {\n            _type: '__annotation',\n            markDef: markDef,\n            children: next(el.childNodes),\n          }\n        }\n        return el.appendChild(el.ownerDocument.createTextNode(` (${href})`)) && next(el.childNodes)\n      },\n    },\n  ]\n}\n","import type {ArraySchemaType} from '@sanity/types'\nimport type {BlockEnabledFeatures, DeserializerRule} from '../../types'\nimport {\n  BLOCK_DEFAULT_STYLE,\n  DEFAULT_BLOCK,\n  DEFAULT_SPAN,\n  HTML_BLOCK_TAGS,\n  HTML_HEADER_TAGS,\n  HTML_LIST_CONTAINER_TAGS,\n} from '../../constants'\nimport {isElement, tagName} from '../helpers'\n\nconst LIST_CONTAINER_TAGS = Object.keys(HTML_LIST_CONTAINER_TAGS)\n\n// font-style:italic seems like the most important rule for italic / emphasis in their html\nfunction isEmphasis(el: Node): boolean {\n  const style = isElement(el) && el.getAttribute('style')\n  return /font-style:italic/.test(style || '')\n}\n\n// font-weight:700 seems like the most important rule for bold in their html\nfunction isStrong(el: Node): boolean {\n  const style = isElement(el) && el.getAttribute('style')\n  return /font-weight:700/.test(style || '')\n}\n\n// Check for attribute given by the gdocs preprocessor\nfunction isGoogleDocs(el: Node): boolean {\n  return isElement(el) && Boolean(el.getAttribute('data-is-google-docs'))\n}\n\nfunction getListItemStyle(el: Node): 'bullet' | 'number' | undefined {\n  const parentTag = tagName(el.parentNode)\n  if (parentTag && !LIST_CONTAINER_TAGS.includes(parentTag)) {\n    return undefined\n  }\n  return tagName(el.parentNode) === 'ul' ? 'bullet' : 'number'\n}\n\nfunction getListItemLevel(el: Node): number {\n  let level = 0\n  if (tagName(el) === 'li') {\n    let parentNode = el.parentNode\n    while (parentNode) {\n      const parentTag = tagName(parentNode)\n      if (parentTag && LIST_CONTAINER_TAGS.includes(parentTag)) {\n        level++\n      }\n      parentNode = parentNode.parentNode\n    }\n  } else {\n    level = 1\n  }\n  return level\n}\n\nconst blocks: Record<string, {style: string} | undefined> = {\n  ...HTML_BLOCK_TAGS,\n  ...HTML_HEADER_TAGS,\n}\n\nfunction getBlockStyle(el: Node, enabledBlockStyles: string[]): string {\n  const childTag = tagName(el.firstChild)\n  const block = childTag && blocks[childTag]\n  if (!block) {\n    return BLOCK_DEFAULT_STYLE\n  }\n  if (!enabledBlockStyles.includes(block.style)) {\n    return BLOCK_DEFAULT_STYLE\n  }\n  return block.style\n}\n\nexport default function createGDocsRules(\n  _blockContentType: ArraySchemaType,\n  options: BlockEnabledFeatures\n): DeserializerRule[] {\n  return [\n    {\n      deserialize(el) {\n        if (isElement(el) && tagName(el) === 'span' && isGoogleDocs(el)) {\n          const span = {\n            ...DEFAULT_SPAN,\n            marks: [] as string[],\n            text: (el as HTMLElement).innerText,\n          }\n          if (isStrong(el)) {\n            span.marks.push('strong')\n          }\n          if (isEmphasis(el)) {\n            span.marks.push('em')\n          }\n          return span\n        }\n        return undefined\n      },\n    },\n    {\n      deserialize(el, next) {\n        if (tagName(el) === 'li' && isGoogleDocs(el)) {\n          return {\n            ...DEFAULT_BLOCK,\n            listItem: getListItemStyle(el),\n            level: getListItemLevel(el),\n            style: getBlockStyle(el, options.enabledBlockStyles),\n            children: next(el.firstChild?.childNodes || []),\n          }\n        }\n        return undefined\n      },\n    },\n  ]\n}\n","import type {DeserializerRule} from '../../types'\nimport {DEFAULT_BLOCK, BLOCK_DEFAULT_STYLE} from '../../constants'\nimport {isElement, tagName} from '../helpers'\n\nfunction getListItemStyle(el: Node): string | undefined {\n  const style = isElement(el) && el.getAttribute('style')\n  if (!style) {\n    return undefined\n  }\n\n  if (!style.match(/lfo\\d+/)) {\n    return undefined\n  }\n\n  return style.match('lfo1') ? 'bullet' : 'number'\n}\n\nfunction getListItemLevel(el: Node): number | undefined {\n  const style = isElement(el) && el.getAttribute('style')\n  if (!style) {\n    return undefined\n  }\n\n  const levelMatch = style.match(/level\\d+/)\n  if (!levelMatch) {\n    return undefined\n  }\n\n  const [level] = levelMatch[0].match(/\\d/) || []\n  const levelNum = level ? parseInt(level, 10) : 1\n  return levelNum || 1\n}\n\nfunction isWordListElement(el: Node): boolean {\n  return isElement(el) && el.className\n    ? el.className === 'MsoListParagraphCxSpFirst' ||\n        el.className === 'MsoListParagraphCxSpMiddle' ||\n        el.className === 'MsoListParagraphCxSpLast'\n    : false\n}\n\nexport default function createWordRules(): DeserializerRule[] {\n  return [\n    {\n      deserialize(el, next) {\n        if (tagName(el) === 'p' && isWordListElement(el)) {\n          return {\n            ...DEFAULT_BLOCK,\n            listItem: getListItemStyle(el),\n            level: getListItemLevel(el),\n            style: BLOCK_DEFAULT_STYLE,\n            children: next(el.childNodes),\n          }\n        }\n        return undefined\n      },\n    },\n  ]\n}\n","import type {ArraySchemaType} from '@sanity/types'\nimport type {BlockEnabledFeatures, DeserializerRule} from '../../types'\nimport createHTMLRules from './html'\nimport createGDocsRules from './gdocs'\nimport createWordRules from './word'\n\nexport function createRules(\n  blockContentType: ArraySchemaType,\n  options: BlockEnabledFeatures\n): DeserializerRule[] {\n  return [\n    ...createWordRules(),\n    ...createGDocsRules(blockContentType, options),\n    ...createHTMLRules(blockContentType, options),\n  ]\n}\n","import type {ArraySchemaType, Block, MarkDefinition} from '@sanity/types'\nimport {flatten} from 'lodash'\nimport {findBlockType} from '../util/findBlockType'\nimport {resolveJsType} from '../util/resolveJsType'\nimport type {\n  ArbitraryTypedObject,\n  DeserializerRule,\n  HtmlDeserializerOptions,\n  PlaceholderAnnotation,\n  PlaceholderDecorator,\n  TypedObject,\n} from '../types'\nimport {createRules} from './rules'\nimport {\n  createRuleOptions,\n  defaultParseHtml,\n  ensureRootIsBlocks,\n  flattenNestedBlocks,\n  trimWhitespace,\n  preprocess,\n  tagName,\n  isNodeList,\n  isMinimalSpan,\n  isPlaceholderDecorator,\n  isPlaceholderAnnotation,\n  isMinimalBlock,\n} from './helpers'\n\n/**\n * HTML Deserializer\n *\n */\nexport default class HtmlDeserializer {\n  blockContentType: ArraySchemaType\n  rules: DeserializerRule[]\n  parseHtml: (html: string) => HTMLElement\n  _markDefs: MarkDefinition[] = []\n\n  /**\n   * Create a new serializer respecting a Sanity block content type's schema\n   *\n   * @param blockContentType - Schema type for array containing _at least_ a block child type\n   * @param options - Options for the deserialization process\n   */\n  constructor(blockContentType: ArraySchemaType, options: HtmlDeserializerOptions = {}) {\n    const {rules = []} = options\n    if (!blockContentType) {\n      throw new Error(\"Parameter 'blockContentType' is required\")\n    }\n    const standardRules = createRules(blockContentType, createRuleOptions(blockContentType))\n    this.rules = [...rules, ...standardRules]\n    const parseHtml = options.parseHtml || defaultParseHtml()\n    this.blockContentType = blockContentType\n    this.parseHtml = (html) => {\n      const doc = preprocess(html, parseHtml)\n      return doc.body\n    }\n  }\n\n  /**\n   * Deserialize HTML.\n   *\n   * @param html - The HTML to deserialize, as a string\n   * @returns Array of blocks - either portable text blocks or other allowed blocks\n   */\n  deserialize = (html: string): TypedObject[] => {\n    this._markDefs = []\n    const {parseHtml} = this\n    const fragment = parseHtml(html)\n    const children = Array.from(fragment.childNodes) as HTMLElement[]\n    // Ensure that there are no blocks within blocks, and trim whitespace\n    const blocks = trimWhitespace(\n      flattenNestedBlocks(ensureRootIsBlocks(this.deserializeElements(children)))\n    )\n\n    if (this._markDefs.length > 0) {\n      blocks\n        .filter((block): block is Block => block._type === 'block')\n        .forEach((block) => {\n          block.markDefs = block.markDefs || []\n          block.markDefs = block.markDefs.concat(\n            this._markDefs.filter((def) => {\n              return flatten(block.children.map((child) => child.marks || [])).includes(def._key)\n            })\n          )\n        })\n    }\n\n    // Set back the potentially hoisted block type\n    const type = this.blockContentType.of.find(findBlockType)\n    if (!type) {\n      return blocks\n    }\n\n    return blocks.map((block) => {\n      if (block._type === 'block') {\n        block._type = type.name\n      }\n      return block\n    })\n  }\n\n  /**\n   * Deserialize an array of DOM elements.\n   *\n   * @param elements - Array of DOM elements to deserialize\n   * @returns\n   */\n  deserializeElements = (elements: Node[] = []): TypedObject[] => {\n    let nodes: TypedObject[] = []\n    elements.forEach((element) => {\n      nodes = nodes.concat(this.deserializeElement(element))\n    })\n    return nodes\n  }\n\n  /**\n   * Deserialize a DOM element\n   *\n   * @param element - Deserialize a DOM element\n   * @returns\n   */\n  deserializeElement = (element: Node): TypedObject | TypedObject[] => {\n    const next = (elements: Node | Node[] | NodeList): TypedObject | TypedObject[] | undefined => {\n      if (isNodeList(elements)) {\n        return this.deserializeElements(Array.from(elements))\n      }\n\n      if (Array.isArray(elements)) {\n        return this.deserializeElements(elements)\n      }\n\n      if (!elements) {\n        return undefined\n      }\n\n      return this.deserializeElement(elements)\n    }\n\n    const block = (props: ArbitraryTypedObject) => {\n      return {\n        _type: '__block',\n        block: props,\n      }\n    }\n\n    let node\n    for (let i = 0; i < this.rules.length; i++) {\n      const rule = this.rules[i]\n      if (!rule.deserialize) {\n        continue\n      }\n\n      const ret = rule.deserialize(element, next, block)\n      const type = resolveJsType(ret)\n\n      if (type !== 'array' && type !== 'object' && type !== 'null' && type !== 'undefined') {\n        throw new Error(`A rule returned an invalid deserialized representation: \"${node}\".`)\n      }\n\n      if (ret === undefined) {\n        continue\n      } else if (ret === null) {\n        throw new Error('Deserializer rule returned `null`')\n      } else if (Array.isArray(ret)) {\n        node = ret\n      } else if (isPlaceholderDecorator(ret)) {\n        node = this.deserializeDecorator(ret)\n      } else if (isPlaceholderAnnotation(ret)) {\n        node = this.deserializeAnnotation(ret)\n      } else {\n        node = ret\n      }\n\n      // Set list level on list item\n      if (ret && !Array.isArray(ret) && isMinimalBlock(ret) && 'listItem' in ret) {\n        let parent = element.parentNode?.parentNode\n        while (parent && tagName(parent) === 'li') {\n          parent = parent.parentNode?.parentNode\n          ret.level = ret.level ? ret.level + 1 : 1\n        }\n      }\n\n      // Set newlines on spans orginating from a block element within a blockquote\n      if (ret && !Array.isArray(ret) && isMinimalBlock(ret) && ret.style === 'blockquote') {\n        ret.children.forEach((child, index) => {\n          if (isMinimalSpan(child) && child.text === '\\r') {\n            child.text = '\\n\\n'\n            if (index === 0 || index === ret.children.length - 1) {\n              ret.children.splice(index, 1)\n            }\n          }\n        })\n      }\n      break\n    }\n\n    return node || next(element.childNodes) || []\n  }\n\n  /**\n   * Deserialize a `__decorator` type\n   * (an internal made up type to process decorators exclusively)\n   *\n   * @param decorator -\n   * @returns array of ...\n   */\n  deserializeDecorator = (decorator: PlaceholderDecorator): TypedObject[] => {\n    const {name} = decorator\n    const applyDecorator = (node: TypedObject) => {\n      if (isPlaceholderDecorator(node)) {\n        return this.deserializeDecorator(node)\n      } else if (isMinimalSpan(node)) {\n        node.marks = node.marks || []\n        if (node.text.trim()) {\n          // Only apply marks if this is an actual text\n          node.marks.unshift(name)\n        }\n      } else if ('children' in node && Array.isArray((node as Block).children)) {\n        const block = node as any\n        block.children = block.children.map(applyDecorator)\n      }\n      return node\n    }\n    return decorator.children.reduce((children, node) => {\n      const ret = applyDecorator(node)\n      if (Array.isArray(ret)) {\n        return children.concat(ret)\n      }\n      children.push(ret)\n      return children\n    }, [] as TypedObject[])\n  }\n\n  /**\n   * Deserialize a `__annotation` object.\n   * (an internal made up type to process annotations exclusively)\n   *\n   * @param annotation -\n   * @returns Array of...\n   */\n  deserializeAnnotation = (annotation: PlaceholderAnnotation): TypedObject[] => {\n    const {markDef} = annotation\n    this._markDefs.push(markDef)\n    const applyAnnotation = (node: TypedObject) => {\n      if (isPlaceholderAnnotation(node)) {\n        return this.deserializeAnnotation(node)\n      } else if (isMinimalSpan(node)) {\n        node.marks = node.marks || []\n        if (node.text.trim()) {\n          // Only apply marks if this is an actual text\n          node.marks.unshift(markDef._key)\n        }\n      } else if ('children' in node && Array.isArray((node as Block).children)) {\n        const block = node as any\n        block.children = block.children.map(applyAnnotation)\n      }\n      return node\n    }\n    return annotation.children.reduce((children, node) => {\n      const ret = applyAnnotation(node)\n      if (Array.isArray(ret)) {\n        return children.concat(ret)\n      }\n      children.push(ret)\n      return children\n    }, [] as TypedObject[])\n  }\n}\n","import {Block, Span, isSpan} from '@sanity/types'\nimport {isEqual} from 'lodash'\nimport {TypedObject} from '../types'\nimport {randomKey} from './randomKey'\n\n/**\n * Block normalization options\n *\n * @public\n */\nexport interface BlockNormalizationOptions {\n  /**\n   * Decorator names that are allowed within portable text blocks, eg `em`, `strong`\n   */\n  allowedDecorators?: string[]\n\n  /**\n   * Name of the portable text block type, if not `block`\n   */\n  blockTypeName?: string\n}\n\n/**\n * Normalizes a block by ensuring it has a `_key` property. If the block is a\n * portable text block, additional normalization is applied:\n *\n * - Ensures it has `children` and `markDefs` properties\n * - Ensures it has at least one child (adds an empty span if empty)\n * - Joins sibling spans that has the same marks\n * - Removes decorators that are not allowed according to the schema\n * - Removes marks that have no annotation definition\n *\n * @param node - The block to normalize\n * @param options - Options for normalization process. See {@link BlockNormalizationOptions}\n * @returns Normalized block\n * @public\n */\nexport function normalizeBlock(\n  node: TypedObject,\n  options: BlockNormalizationOptions = {}\n): Omit<TypedObject | Block<TypedObject | Span>, '_key'> & {_key: string} {\n  if (node._type !== (options.blockTypeName || 'block')) {\n    return '_key' in node ? (node as TypedObject & {_key: string}) : {...node, _key: randomKey(12)}\n  }\n\n  const block: Omit<Block<TypedObject | Span>, 'style'> = {\n    _key: randomKey(12),\n    children: [],\n    markDefs: [],\n    ...node,\n  }\n\n  const lastChild = block.children[block.children.length - 1]\n  if (!lastChild) {\n    // A block must at least have an empty span type child\n    block.children = [\n      {\n        _type: 'span',\n        _key: `${block._key}${0}`,\n        text: '',\n        marks: [],\n      },\n    ]\n    return block\n  }\n\n  const usedMarkDefs: string[] = []\n  const allowedDecorators =\n    options.allowedDecorators && Array.isArray(options.allowedDecorators)\n      ? options.allowedDecorators\n      : false\n\n  block.children = block.children\n    .reduce((acc, child) => {\n      const previousChild = acc[acc.length - 1]\n      if (\n        previousChild &&\n        isSpan(child) &&\n        isSpan(previousChild) &&\n        isEqual(previousChild.marks, child.marks)\n      ) {\n        if (lastChild && lastChild === child && child.text === '' && block.children.length > 1) {\n          return acc\n        }\n\n        previousChild.text += child.text\n        return acc\n      }\n      acc.push(child)\n      return acc\n    }, [] as (TypedObject | Span)[])\n    .map((child, index) => {\n      if (!child) {\n        throw new Error('missing child')\n      }\n\n      child._key = `${block._key}${index}`\n      if (isSpan(child)) {\n        if (!child.marks) {\n          child.marks = []\n        } else if (allowedDecorators) {\n          child.marks = child.marks.filter((mark) => {\n            const isAllowed = allowedDecorators.includes(mark)\n            const isUsed = block.markDefs.some((def) => def._key === mark)\n            return isAllowed || isUsed\n          })\n        }\n\n        usedMarkDefs.push(...child.marks)\n      }\n\n      return child\n    })\n\n  // Remove leftover (unused) markDefs\n  block.markDefs = block.markDefs.filter((markDef) => usedMarkDefs.includes(markDef._key))\n  return block\n}\n","import type {ArraySchemaType, Block, Span} from '@sanity/types'\nimport blockContentTypeFeatures from './util/blockContentTypeFeatures'\nimport HtmlDeserializer from './HtmlDeserializer'\nimport {normalizeBlock} from './util/normalizeBlock'\nimport {BlockContentFeatures, HtmlDeserializerOptions, TypedObject} from './types'\n\n/**\n * Convert HTML to blocks respecting the block content type's schema\n *\n * @param html - The HTML to convert to blocks\n * @param blockContentType - A compiled version of the schema type for the block content\n * @param options - Options for deserializing HTML to blocks\n * @returns Array of blocks\n * @public\n */\nexport function htmlToBlocks(\n  html: string,\n  blockContentType: ArraySchemaType,\n  options: HtmlDeserializerOptions = {}\n): (TypedObject | Block<TypedObject | Span>)[] {\n  const deserializer = new HtmlDeserializer(blockContentType, options)\n  return deserializer.deserialize(html).map((block) => normalizeBlock(block))\n}\n\n/**\n * Normalize and extract features of an schema type containing a block type\n *\n * @param blockContentType - Schema type for the block type\n * @returns Returns the featureset of a compiled block content type.\n * @public\n */\nexport function getBlockContentFeatures(blockContentType: ArraySchemaType): BlockContentFeatures {\n  return blockContentTypeFeatures(blockContentType)\n}\n\nexport {normalizeBlock}\nexport {randomKey} from './util/randomKey'\nexport type {TypedObject, HtmlDeserializerOptions, BlockContentFeatures}\nexport type {\n  ResolvedAnnotationType,\n  DeserializerRule,\n  HtmlParser,\n  ArbitraryTypedObject,\n  BlockEditorSchemaProps,\n} from './types'\nexport type {BlockNormalizationOptions} from './util/normalizeBlock'\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","l","Array","slice","concat","blockContentTypeFeatures","getListItemStyle","getListItemLevel"],"mappings":"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"}